[{"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\index.js":"1","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\reportWebVitals.js":"2","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\App.js":"3","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\store.js":"4","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\root-reducer.js":"5","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\loader\\loader.component.jsx":"6","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\landing-page\\landing-page.component.jsx":"7","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\thankyou-page\\thankyou-page.component.jsx":"8","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page\\quiz-page.component.jsx":"9","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\user\\user.reducer.js":"10","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.reducer.js":"11","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.reducer.js":"12","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.selector.js":"13","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.actions.js":"14","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.selector.js":"15","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.actions.js":"16","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\login\\login.component.jsx":"17","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\instructions\\instructions.component.jsx":"18","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\mcq\\mcq.component.jsx":"19","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\timer\\timer.component.jsx":"20","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\drawer\\TemporaryDrawer.jsx":"21","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.types.js":"22","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.types.js":"23","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\question\\question.component.jsx":"24","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\answer\\answer.component.jsx":"25","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\answer\\answercomponentsnaphunt.jsx":"26","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\grid\\grid.component.jsx":"27","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\utils\\number.js":"28","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-cp\\quiz-page-cp.component.jsx":"29","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-ctc\\quiz-page-ctc.component.jsx":"30","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-xenatus\\quiz-page-xenatus.component.jsx":"31","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-circuitron\\quiz-page-circuitron.component.jsx":"32"},{"size":1011,"mtime":1624167596880,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1624167597287,"results":"35","hashOfConfig":"34"},{"size":1574,"mtime":1624213594580,"results":"36","hashOfConfig":"34"},{"size":400,"mtime":1624167597154,"results":"37","hashOfConfig":"34"},{"size":570,"mtime":1624167597151,"results":"38","hashOfConfig":"34"},{"size":628,"mtime":1624167596674,"results":"39","hashOfConfig":"34"},{"size":1693,"mtime":1624167596896,"results":"40","hashOfConfig":"34"},{"size":2561,"mtime":1624167597017,"results":"41","hashOfConfig":"34"},{"size":10477,"mtime":1624167596905,"results":"42","hashOfConfig":"34"},{"size":0,"mtime":1624167597169,"results":"43","hashOfConfig":"34"},{"size":469,"mtime":1624167597033,"results":"44","hashOfConfig":"34"},{"size":2487,"mtime":1624167597061,"results":"45","hashOfConfig":"34"},{"size":693,"mtime":1624167597144,"results":"46","hashOfConfig":"34"},{"size":173,"mtime":1624167597031,"results":"47","hashOfConfig":"34"},{"size":222,"mtime":1624167597037,"results":"48","hashOfConfig":"34"},{"size":820,"mtime":1624167597049,"results":"49","hashOfConfig":"34"},{"size":4884,"mtime":1624213481103,"results":"50","hashOfConfig":"34"},{"size":767,"mtime":1624167596666,"results":"51","hashOfConfig":"34"},{"size":1161,"mtime":1624167596693,"results":"52","hashOfConfig":"34"},{"size":2465,"mtime":1624167596776,"results":"53","hashOfConfig":"34"},{"size":4378,"mtime":1624167596598,"results":"54","hashOfConfig":"34"},{"size":91,"mtime":1624167597042,"results":"55","hashOfConfig":"34"},{"size":381,"mtime":1624167597149,"results":"56","hashOfConfig":"34"},{"size":2895,"mtime":1624167596763,"results":"57","hashOfConfig":"34"},{"size":3083,"mtime":1624200147718,"results":"58","hashOfConfig":"34"},{"size":2044,"mtime":1624167596582,"results":"59","hashOfConfig":"34"},{"size":6132,"mtime":1624167596607,"results":"60","hashOfConfig":"34"},{"size":257,"mtime":1624167597295,"results":"61","hashOfConfig":"34"},{"size":10430,"mtime":1624212155481,"results":"62","hashOfConfig":"34"},{"size":10430,"mtime":1624212891551,"results":"63","hashOfConfig":"34"},{"size":10435,"mtime":1624212595301,"results":"64","hashOfConfig":"34"},{"size":10444,"mtime":1624212523154,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"9xj32z",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"68"},"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\index.js",[],["147","148"],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\reportWebVitals.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\App.js",["149","150","151","152","153"],"// import logo from './logo.svg';\r\nimport \"./App.css\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport QuizPage from \"./pages/quiz-page/quiz-page.component\";\r\nimport QuizPageCP from \"./pages/quiz-page-cp/quiz-page-cp.component\";\r\nimport QuizPageCTC from \"./pages/quiz-page-ctc/quiz-page-ctc.component\";\r\nimport QuizPageXenatus from \"./pages/quiz-page-xenatus/quiz-page-xenatus.component\";\r\nimport QuizPageCircuitRon from \"./pages/quiz-page-circuitron/quiz-page-circuitron.component\";\r\nimport LandingPage from \"./pages/landing-page/landing-page.component\";\r\nimport ThankyouPage from \"./pages/thankyou-page/thankyou-page.component\";\r\nimport Loader from \"./components/loader/loader.component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact={true} path=\"/\" component={LandingPage} />\r\n        {/* <Route exact={true} path=\"/c2c/quiz/:authToken\" component={QuizPage} />\r\n        <Route exact={true} path=\"/couchPotato/quiz/:authToken\" component={QuizPage} />\r\n        <Route exact={true} path=\"/xenatus/quiz/:authToken\" component={QuizPage} />\r\n        <Route exact={true} path=\"//quiz/:authToken\" component={QuizPage} /> */}\r\n        <Route\r\n          exact={true}\r\n          path=\"/:event/quiz/:authToken/\"\r\n          component={QuizPage}\r\n        />\r\n        <Route exact={true} path=\"/thankyou/#!\" component={ThankyouPage} />\r\n        {/* <Route exact={false} path=\"/loader\" component={Loader} /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\store.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\root-reducer.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\loader\\loader.component.jsx",["154"],"// import logo from './logo.svg';\r\nimport \"./loader.component.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\n\r\nfunction Loader() {\r\n  const [loading, setLoading] = useState(false);\r\n  let [color, setColor] = useState(\"#BD10E0\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 5000);\r\n  }, []);\r\n  return (\r\n    <div className=\"loaderStyling\">\r\n      <RingLoader color={color} loading={loading} size={100} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\landing-page\\landing-page.component.jsx",["155","156"],"import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport \"./landing-page.styles.scss\";\r\n\r\nimport Login from \"../../components/login/login.component\";\r\nimport Instructions from \"../../components/instructions/instructions.component\";\r\nimport { Container, Row, Col, Navbar } from \"react-bootstrap\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\n// import circuitron from \"../../assets/Circuitron.png\";\r\n// import coutchpotato from \"../../assets/CouchPotato.png\";\r\n// import CampusToCorporate from \"../../assets/CampustoCorporate.png\";\r\n// import xeNatus from \"../../assets/xeNatus.png\";\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <div>\r\n      {/* <Navbar className='nav-bar' variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">\r\n          Couch Potato\r\n        </Navbar.Brand>\r\n      </Navbar> */}\r\n\r\n      <Container fluid>\r\n        <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo1\" />\r\n        {/* <img\r\n          src={circuitron}\r\n          width=\"200px\"\r\n          className=\"Xenia21Logo1 circuitron1\"\r\n        /> */}\r\n        {/* <img\r\n          src={coutchpotato}\r\n          width=\"200px\"\r\n          className=\"Xenia21Logo1 couchpotato\"\r\n        /> */}\r\n\r\n        {/* <img\r\n          src={CampusToCorporate}\r\n          className=\"Xenia21Logo1 campustocorporate\"\r\n        /> */}\r\n\r\n        {/* <img src={xeNatus} width=\"200px\" className=\"Xenia21Logo1 xenatus\" /> */}\r\n        <Row>\r\n          <Col lg={6} sm={12}>\r\n            <Instructions />\r\n          </Col>\r\n          <Col lg={6} sm={12}>\r\n            <Login />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LandingPage);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\thankyou-page\\thankyou-page.component.jsx",["157","158","159","160","161"],"import React from \"react\";\r\n\r\nimport \"./thankyou-page.styles.scss\";\r\nimport styled from \"styled-components\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// import Login from \"../../components/login/login.component\";\r\n// import Instructions from \"../../components/instructions/instructions.component\";\r\nimport { Container, Row, Col, Navbar } from \"react-bootstrap\";\r\n\r\nclass ThankyouPage extends React.Component{\r\n  componentDidMount()\r\n  {\r\n    window.history.pushState(null, document.title, window.location.href); window.addEventListener('popstate', function (event){ window.history.pushState(null, document.title, window.location.href); });\r\n  }\r\n  render(){\r\n    return (\r\n      <Wrapper>\r\n        <div id=\"paddingStyle\" className=\"container-fluid1\">\r\n          <div className=\"overlay\">\r\n            <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo\" />\r\n\r\n            <div className=\"thankyouStyling\">\r\n              <Typography variant=\"h1\" className=\"thankyou-heading\">\r\n                Thank You!\r\n              </Typography>\r\n            </div>\r\n            <div className=\"thankyouStyling\">\r\n              {/* <Typography variant=\"h3\" className=\"subheading\">\r\n                lorem ipsom dolor sit amet\r\n              </Typography> */}\r\n              <Typography variant=\"h3\" className=\"subheading\">\r\n                Your score is {this.props.location.state.score}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n          }\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  html {\r\n    overflow: hidden;\r\n  }\r\n  .Xenia21Logo {\r\n    margin-top: -10%;\r\n    width: 280px;\r\n    height: 150px;\r\n  }\r\n  .EventNameLogo {\r\n    margin-top: -15%;\r\n  }\r\n\r\n  .subheading {\r\n    margin: -10% 20%;\r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .Xenia21Logo {\r\n      margin-top: -2%;\r\n      width: 280px;\r\n      height: 150px;\r\n    }\r\n    .EventNameLogo {\r\n      margin-top: -5%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .Xenia21Logo {\r\n      margin-bottom: -10%;\r\n    }\r\n    .EventNameLogo {\r\n      margin-top: -10%;\r\n      margin-bottom: -20%;\r\n    }\r\n    .thankyouStyling {\r\n      margin: 50% auto;\r\n    }\r\n    .thankyou-heading {\r\n      font-size: 70px;\r\n    }\r\n    .subheading {\r\n      margin: -30% 20%;\r\n      font-size: 35px;\r\n    }\r\n  }\r\n  .MuiTypography-h1 {\r\n    font-family: Fenix;\r\n  }\r\n`;\r\nexport default withRouter(ThankyouPage);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page\\quiz-page.component.jsx",["162","163","164","165","166"],"//prev,next max limits hardcoded change.\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  setFetchedQuestionsToState,\r\n  selectedQuestionNext,\r\n  selectedQuestionPrevious,\r\n  setSelectedQuestion,\r\n  // setRecentFetchedTime\r\n} from \"../../redux/question/question.actions\";\r\nimport{\r\n  setRecentFetchedTime\r\n} from \"../../redux/general/general.actions\";\r\nimport {\r\n  getSelectedQuestion,\r\n  getSelectedQuestionNumber,\r\n  getQuestions\r\n} from \"../../redux/question/question.selector\";\r\nimport {\r\n  getRecentFetchedTime\r\n} from \"../../redux/general/general.selector\";\r\n\r\nimport \"./quiz-page.styles.scss\";\r\n\r\n//import GridComponent from \"../../components/grid/grid.component\";\r\nimport McqComponent from \"../../components/mcq/mcq.component\";\r\nimport TimerComponent from \"../../components/timer/timer.component\";\r\nimport Loader from \"../../components/loader/loader.component\";\r\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\nimport { useEffect } from \"react\";\r\nimport circuitron from \"../../assets/circuitron.png\";\r\n// import coutchpotato from \"../../assets/CouchPotato.png\";\r\n// import CampusToCorporate from \"../../assets/CampustoCorporate.png\";\r\n// import xeNatus from \"../../assets/xeNatus.png\";\r\n\r\nclass QuizPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mounted:false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"this.props is \",this.props)\r\n    console.log(\"state before setting mounted to true\",this.state);\r\n    // if(this.firstTime===false)\r\n    // {\r\n    //   this.firstTime=true;\r\n    //   Location.reload(false)\r\n      \r\n    // }\r\n    if(this.props.questions.length===0)\r\n    {\r\n      axios\r\n        .post(\"http://localhost:3001/c2c/fetchQuestions\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          // this.setState(res.data);\r\n          this.props.setFetchedQuestionsToState(res.data);\r\n          this.props.setSelectedQuestion(1);\r\n          console.log(\"action initialised\");\r\n          this.setState({mounted:true},console.log(this.state))\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"an error has occurred : \", error);\r\n        });\r\n    }\r\n    else\r\n    {\r\n        this.props.setSelectedQuestion(1);\r\n        this.setState({mounted:true},()=>console.log(this.state))\r\n    }\r\n    console.log(this.props);\r\n    var link=\"http://localhost:3001/c2c/getTime/\"+this.props.match.params.authToken\r\n    console.log(link)\r\n    axios\r\n    .post(link)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      if(res.data.status===\"Failure\")\r\n      {\r\n          this.props.history.push(\"/\");\r\n      }\r\n      else{\r\n        if(res.data.time<=0)\r\n        {\r\n          this.submit(this,this.props.questions);\r\n        }\r\n        this.props.setRecentFetchedTime(res.data.time)\r\n      }\r\n      // // this.setState(res.data);\r\n      // this.props.setFetchedQuestionsToState(res.data);\r\n      // this.props.setSelectedQuestion(1);\r\n      // console.log(\"action initialised\");\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"an error has occurred : \", error);\r\n    })\r\n    if(this.props.fetchedTime<=0)\r\n    {\r\n        console.log(\"here in if of will update\");\r\n        this.submit(this,this.props.questions)\r\n    }\r\n    \r\n  }\r\n\r\n  componentWillUpdate(){\r\n    if(this.props.fetchedTime<=0)\r\n    {\r\n        console.log(\"here in if of will update\");\r\n        this.submit(this,this.props.questions)\r\n    }\r\n    console.log(\"Fetched time in main component is\",this.props.fetchedTime)\r\n\r\n  }\r\n  \r\n  \r\n  submit=(reference,response)=>{\r\n    console.log(\"submit clicked\")\r\n    console.log(\"body while sending is\",response)\r\n    var link=\"http://localhost:3001/c2c/saveResponse/\"+reference.props.match.params.authToken\r\n    axios\r\n      .post(link, response)\r\n      .then(function (res) {\r\n        console.log(\"response returned from an endpoint\",res.data.score)\r\n\r\n        reference.props.history.push({\r\n          pathname:'/thankyou/#!',\r\n          state:{score:res.data.score}\r\n      });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Network error raised\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(\"state before rendering\",this.state)\r\n    return !this.state.mounted ?(<Loader/>):(\r\n      <Wrapper>\r\n        <div id=\"paddingStyle\" className=\"container-fluid\">\r\n          <div className=\"overlay\">\r\n            <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo\" />\r\n            <div>\r\n              {/* <img src={Xenia21_Logo} width=\"200px\" className=\"EventNameLogo\" /> */}\r\n              <img src={circuitron} width=\"200px\" className=\"EventNameLogo\" />\r\n              {/* <img src={CampusToCorporate} className=\"EventNameLogo\" /> */}\r\n            </div>\r\n            <TemporaryDrawer mounted={this.state.mounted}/>\r\n            {/* <div id=\"timerRow\" className=\"row\">\r\n              {/* Instructions */}\r\n            {/* <div className=\"col-lg-10 col-md-9 col-sm-2 div1\"></div> */}\r\n            {/* <div className=\"col-lg-2 col-md-2 col-sm-10\"> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            <TimerComponent />\r\n            <div className=\"row\">\r\n              {/* Instructions */}\r\n              <div className=\"col-lg-3 col-md-2 col-sm-12 div1\"></div>\r\n\r\n              <div className=\"col-lg-7 col-md-10 col-sm-1\">\r\n                <McqComponent />\r\n              </div>\r\n            </div>\r\n            <div className=\"row row2\">\r\n              <div className=\"col-lg-2.5 col-md-3 col-sm-11 \"></div>\r\n              <div className=\"col-lg-7 col-md-7 col-sm-1\">\r\n                <Wrapper>\r\n                  <div className=\"row row1\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() =>{\r\n                            this.props.selectedQuestionPrevious(\r\n                              this.props.selectedQuestionNumber\r\n                            )\r\n                            console.log(this.props);\r\n                          }\r\n                        }\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={()=>this.submit(this,this.props.questions)}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={()=>{\r\n                          this.props.selectedQuestionNext(\r\n                          this.props.selectedQuestionNumber\r\n                        )\r\n                        }\r\n                      }\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </div>\r\n                </Wrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  html {\r\n    overflow: hidden;\r\n  }\r\n  .Xenia21Logo{\r\n    margin-top:-10%;\r\n    width:250px;\r\n    height:125px;\r\n  }\r\n  .EventNameLogo{\r\n    margin-top:-15%;\r\n    \r\n    \r\n  }\r\n\r\n  .buttonStyle {\r\n    \r\n    margin-right: 10%;\r\n    background: #f11794;\r\n    border-radius:0;\r\n    margin: 0 20px 0px -20px;\r\n    &:hover {\r\n      background: black;\r\n      border: 2px solid #f11794;\r\n      color: #f11794;\r\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\r\n    }\r\n  }\r\n  .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n  .row1 {\r\n    display: revert;\r\n    margin-left:-12%;\r\n  }\r\n  .row2{\r\n    margin-top:2%;\r\n    margin-left:7%;\r\n  }\r\n  .row {\r\n    dispplay: revert;\r\n  }\r\n  #timerRow {\r\n    margin-top:-12%:\r\n    margin-right: 2%;\r\n   \r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:-2%;\r\n      width:250px;\r\n      height:125px;\r\n    }\r\n    .EventNameLogo{\r\n      margin-top:-3%;\r\n      width:210px;\r\n      height:80px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:0;\r\n      margin-bottom:-10%;\r\n      \r\n    }\r\n    .EventNameLogo{\r\n      margin-top: -10%;\r\n      margin-bottom: -20%;\r\n     \r\n    }\r\n    .row1 {\r\n      margin-left:8%;\r\n    }\r\n  }\r\n`;\r\n\r\n// @media only screen and (min-width: 600px) {\r\n  //   .Xenia21Logo{\r\n  //     margin-top:-2%;\r\n  //     width:280px;\r\n  //     height:150px;\r\n  //   }\r\n  //   .EventNameLogo{\r\n  //     margin-top:-5%;\r\n      \r\n  //   }\r\n  // }\r\n  // @media only screen and (max-width: 600px) {\r\n  //   .Xenia21Logo{\r\n  //     margin-bottom:-10%;\r\n      \r\n  //   }\r\n  //   .EventNameLogo{\r\n  //     margin-top: -10%;\r\n  //     margin-bottom: -20%;\r\n      \r\n  //   }\r\n  // }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFetchedQuestionsToState: (questions) =>\r\n    dispatch(setFetchedQuestionsToState(questions)),\r\n  selectedQuestionNext: (num) => {\r\n    if(num===4)\r\n    {\r\n\r\n    }\r\n    else\r\n    {\r\n      dispatch(selectedQuestionNext(num))\r\n    }\r\n  },\r\n  selectedQuestionPrevious: (num) => {\r\n    if(num===0)\r\n    {\r\n\r\n    }\r\n    else\r\n    {\r\n      dispatch(selectedQuestionPrevious(num))\r\n    }\r\n  },\r\n  setSelectedQuestion: (num) => dispatch(setSelectedQuestion(num)),\r\n  setRecentFetchedTime:(time)=>dispatch(setRecentFetchedTime(time))\r\n\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  questions:getQuestions,\r\n  selectedQuestion: getSelectedQuestion,\r\n  selectedQuestionNumber: getSelectedQuestionNumber,\r\n  fetchedTime:getRecentFetchedTime\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(QuizPage));\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\user\\user.reducer.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.reducer.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.reducer.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.selector.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.actions.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.selector.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.actions.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\login\\login.component.jsx",["167"],"import React, { useRef } from \"react\";\r\nimport Logo from \"../../assets/logo.png\";\r\nimport \"./login.styles.scss\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import CustomizedSnackbars from \"../alert/alert.component\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEffect } from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    color: \"black\",\r\n  },\r\n  required1: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst Login = ({ history }) => {\r\n  const usernameRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  var [severity, setSeverity] = React.useState(\"\"); //success,error,warning,info\r\n  var [message, setMessage] = React.useState(\"\"); //change message\r\n  const onClickFunction = () => {\r\n    axios\r\n      .post(\"http://localhost:3001/c2c/login\", {\r\n        username: usernameRef.current.value,\r\n        password: passwordRef.current.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status === \"Success\") {\r\n          setSeverity(\"success\");\r\n          setMessage(res.data.message);\r\n          handleClick();\r\n          var link = \"/quiz/\" + res.data.currentToken + \"/\";\r\n          console.log(link);\r\n          setTimeout(() => history.push(link), 2000);\r\n        }\r\n        if (res.data.status === \"Error\") {\r\n          setSeverity(\"error\");\r\n          setMessage(res.data.message);\r\n          handleClick();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"an error has occurred : \", error);\r\n      });\r\n  };\r\n\r\n  // useEffect(()=>handleClick());\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const [eventname, setEventname] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setEventname(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img src={Logo} width=\"200px\" alt=\"Xenia logo\" />\r\n      {/* <h2>Login</h2> */}\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            ref={usernameRef}\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Control\r\n            ref={passwordRef}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n        <div>\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-required-label\">\r\n              Event-Name\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-required-label\"\r\n              id=\"demo-simple-select-required\"\r\n              value={eventname}\r\n              onChange={handleChange}\r\n              className={classes.selectEmpty}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={10}>Couch Potato</MenuItem>\r\n              <MenuItem value={20}>Campus-To-Corporate</MenuItem>\r\n              <MenuItem value={30}>XeNatus</MenuItem>\r\n              <MenuItem value={40}>Circuitron</MenuItem>\r\n            </Select>\r\n            <FormHelperText className={classes.required1}>\r\n              Required\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n        <Button\r\n          variant=\"dark\"\r\n          size=\"md\"\r\n          type=\"submit\"\r\n          className=\"buttonStyle\"\r\n          onClick={() => onClickFunction()}\r\n        >\r\n          {/* <Button variant=\"dark\" size=\"md\" type=\"submit\" onClick={handleClick}> */}\r\n          Login\r\n        </Button>\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={severity}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\instructions\\instructions.component.jsx",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\mcq\\mcq.component.jsx",["168"],"import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Question from \"../question/question.component\";\r\nimport Answer from \"../answer/answer.component\";\r\nimport AnswerComponent from \"../answer/answercomponentsnaphunt\";\r\nimport \"./mcq.styles.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function McqComponent() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"mcq-component\">\r\n        {/* <div className=\"questionStyling\"> */}\r\n        <Question className=\"question\" />\r\n        {/* </div> */}\r\n        <Grid container spacing={1}>\r\n          <div className=\"Leftspace\">\r\n            <Grid item xs={2}>\r\n              <Answer />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        {/* Uncomment  to replace answer option by upload file option */}\r\n        {/* <AnswerComponent /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\timer\\timer.component.jsx",["169","170","171","172"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./timer.styles.scss\";\r\n// import { Typography } from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  getRecentFetchedTime\r\n} from \"../../redux/general/general.selector\";\r\nimport{\r\n  setRecentFetchedTime\r\n} from \"../../redux/general/general.actions\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Timer = ({fetchedTime,setRecentFetchedTime}) => {\r\n  const [counter, setCounter] = React.useState(fetchedTime);\r\n\r\n  React.useEffect(() => {\r\n    // if(counter===9)\r\n    // {\r\n    //   setRecentFetchedTime()\r\n    // }\r\n    if(counter===598)\r\n    {\r\n      window.location.reload();\r\n    }\r\n    if(counter===5)\r\n    {\r\n      setRecentFetchedTime(0);\r\n    }\r\n    if(counter===1)\r\n    {\r\n      setRecentFetchedTime(10);\r\n    }\r\n    if(counter===3599)//change later\r\n    {\r\n      setCounter(fetchedTime)\r\n    }\r\n    const timer =\r\n      counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n    return () => clearInterval(timer);\r\n  }, [counter]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <div className=\"container-xs1\">\r\n          <div className=\"row\">\r\n            <div className=\"d-lg-none  col-sm-9\"></div>\r\n            <div className=\"col-lg-2 col-sm-5\">\r\n              <h1 className=\"timer\">\r\n                {Math.floor(counter / (60 * 60))<10?(\"0\"+(Math.floor(counter / (60 * 60)).toString())):(Math.floor(counter / (60 * 60)))}:{Math.floor((counter % (60 * 60)/60))<10?(\"0\"+(Math.floor((counter % (60 * 60)/60)).toString())):(Math.floor((counter % (60 * 60))/60))}:{counter%60<10?(\"0\"+(counter%60).toString()):counter%60}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n  .row {\r\n    display: inline-block;\r\n  }\r\n  .container-xs1 {\r\n    margin-top: -8%;\r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .container-xs1 {\r\n      margin-top: -20%;\r\n      margin-right: -80%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .timer {\r\n      padding-top: -5%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setRecentFetchedTime:(time)=>dispatch(setRecentFetchedTime(time))\r\n\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  fetchedTime: getRecentFetchedTime,\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Timer);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\drawer\\TemporaryDrawer.jsx",["173"],"import \"./TemporaryDrawerStyles.scss\";\r\nimport GridComponent from \"../../components/grid/grid.component\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\r\n// import AppBar from \"@material-ui/core/AppBar\";\r\n// import Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n// import ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CloseSharpIcon from \"@material-ui/icons/CloseSharp\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport styled from \"styled-components\";\r\n\r\nconst drawerWidth = 370;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft({ mounted }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Wrapper>\r\n        <div className=\"fixed-top menuStyle\">\r\n          {/* <div className=\"position-absolute top-0 start-0\"> */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          {/* </div> */}\r\n        </div>\r\n      </Wrapper>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <GridComponent mounted={mounted} />\r\n\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton\r\n            onClick={handleDrawerClose}\r\n            className=\"closeButtonPosition\"\r\n          >\r\n            {theme.direction === \"ltr\" ? (\r\n              <CloseSharpIcon className=\"IconColor\" fontSize=\"large\" />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nconst Wrapper = styled.section`\r\n  .menuStyle {\r\n    margin-left: 20px;\r\n    right: 94%;\r\n  }\r\n  .closeButtonPosition {\r\n    right: -9px;\r\n    margin-top: 50%;\r\n  }\r\n  .footerGrid {\r\n    margin-top: 50%;\r\n  }\r\n`;\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\general\\general.types.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\redux\\question\\question.types.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\question\\question.component.jsx",["174","175","176","177"],"import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport \"./question.styles.scss\";\r\n// import { colors } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { getSelectedQuestion,getSelectedQuestionNumber } from \"../../redux/question/question.selector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(3),\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      height: 90,\r\n    },\r\n  },\r\n  media: {\r\n    height: 140,\r\n    width: 280,\r\n    margin: \"auto\",\r\n    marginBottom: 20,\r\n    marginTop: -25,\r\n  },\r\n}));\r\n\r\nconst Question = function ({ question,questionNumber}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"Controlled\");\r\n\r\n  // const handleChange = (event) => {\r\n  //   setValue(event.target.value);\r\n  // };\r\n  return (\r\n    <Wrapper>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div className=\"question\" style={{ justifyItems: \"left\" }}>\r\n          <TextField\r\n            id=\"standard-multiline-flexible\"\r\n            label={`Question #${questionNumber+1}`}\r\n            multiline\r\n            rowsMax={3}\r\n            // value=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sha \"\r\n            value={question.content}\r\n            // onChange={handleChange}\r\n            InputProps={{\r\n              style: { fontSize: 25 },\r\n              readOnly: true,\r\n              disableUnderline: true,\r\n            }}\r\n          />\r\n          {/* Uncomment card media to bring image  */}\r\n          {/* <CardMedia className={classes.media}>\r\n            <img\r\n              className={classes.media}\r\n              src=\"https://dl.dropboxusercontent.com/s/4tbw338pzuk6dro/i01_WhatsApp%20Image%202021-06-17%20at%2011.43.31%20AM.jpeg?dl=0\"\r\n            />\r\n          </CardMedia> */}\r\n        </div>\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  question: getSelectedQuestion,\r\n  questionNumber: getSelectedQuestionNumber\r\n});\r\nconst Wrapper = styled.section`\r\n  .media {\r\n    height: 140px;\r\n    width: 280px;\r\n\r\n    margin: auto;\r\n    margin-bottom: 20;\r\n    margin-top: -25;\r\n    object-fit: scale-down;\r\n    display: block;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nexport default connect(mapStateToProps, null)(Question);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\answer\\answer.component.jsx",["178","179"],"import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport \"./answer.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getSelectedQuestionAnswers,\r\n  getSelectedQuestion,\r\n} from \"../../redux/question/question.selector\";\r\nimport { setSelectedAnswer } from \"../../redux/question/question.actions\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\n\r\nconst StyledRadio = styled(Radio)`\r\n  color: ${cyan[400]};\r\n  &.Mui-checked {\r\n    color: ${cyan[600]};\r\n  }\r\n`;\r\nconst RadioButtonsGroup = function ({\r\n  answers,\r\n  selectedQuestion,\r\n  setSelectedAnswer,\r\n}) {\r\n  const selectedAnswer = selectedQuestion.selectedAnswer;\r\n  const [value, setValue] = React.useState(selectedAnswer);\r\n\r\n  React.useEffect(() => {\r\n    setValue(selectedAnswer);\r\n  }, [selectedAnswer]);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n  //{answers[0].text}\r\n  //{answers[1].text}\r\n  //{answers[2].text}\r\n  //{answers[3].text}\r\n  return (\r\n    <Wrapper>\r\n      <FormControl component=\"fieldset\" className=\"styling vertical-center-row\">\r\n        <RadioGroup\r\n          aria-label=\"options\"\r\n          name=\"gender1\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel\r\n            value=\"0\"\r\n            control={<StyledRadio />}\r\n            label={answers[0]}\r\n            // label=\"Random Option Opp tion oOO ppp Random Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp\"\r\n            className=\"FormControlLabelStyling\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"1\"\r\n            control={<StyledRadio />}\r\n            label={answers[1]}\r\n          />\r\n          <FormControlLabel\r\n            value=\"2\"\r\n            control={<StyledRadio />}\r\n            label={answers[2]}\r\n          />\r\n          <FormControlLabel\r\n            value=\"3\"\r\n            control={<StyledRadio />}\r\n            label={answers[3]}\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  answers: getSelectedQuestionAnswers,\r\n  selectedQuestion: getSelectedQuestion,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedAnswer: (num) => dispatch(setSelectedAnswer(num)),\r\n});\r\nconst Wrapper = styled.section`\r\n  @media only screen and (min-width: 600px) {\r\n    .MuiFormControlLabel-label {\r\n      font-size: 20px;\r\n      font-family: Fenix;\r\n    }\r\n  }\r\n  .MuiRadio-root {\r\n    color: #ffffff80;\r\n  }\r\n`;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\answer\\answercomponentsnaphunt.jsx",["180"],"import axios from \"axios\";\r\nimport \"./answer.styles.scss\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nclass AnswerComponent extends Component {\r\n  state = {\r\n    // Initially, no file is selected\r\n    selectedFile: null,\r\n  };\r\n\r\n  // On file select (from the pop up)\r\n  onFileChange = (event) => {\r\n    // Update the state\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n  };\r\n\r\n  // On file upload (click the upload button)\r\n  onFileUpload = () => {\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    // Details of the uploaded file\r\n    console.log(this.state.selectedFile);\r\n\r\n    // Request made to the backend api\r\n    // Send formData object\r\n    // axios.post(\"localhost:3001/uploadfile\", formData); <<<<<<<<<<<<<<<<<<<UNCOMMENT HERE>>>>>>>>\r\n  };\r\n\r\n  // File content to be displayed after\r\n  // file upload is complete\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          {/* <h4>Choose before Pressing the Upload button</h4> */}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            accept=\"image/*\"\r\n            type=\"file\"\r\n            onChange={this.onFileChange}\r\n            className=\"buttonStyle buttonStyleSnapHunt\"\r\n          />\r\n          <Button\r\n            onClick={this.onFileUpload}\r\n            className=\"buttonStyle buttonStyleSnapHunt\"\r\n          >\r\n            Upload!\r\n          </Button>\r\n        </div>\r\n        {this.fileData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnswerComponent;\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\components\\grid\\grid.component.jsx",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\utils\\number.js",[],"C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-cp\\quiz-page-cp.component.jsx",["181","182","183","184","185"],"//prev,next max limits hardcoded change.\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  setFetchedQuestionsToState,\r\n  selectedQuestionNext,\r\n  selectedQuestionPrevious,\r\n  setSelectedQuestion,\r\n  // setRecentFetchedTime\r\n} from \"../../redux/question/question.actions\";\r\nimport { setRecentFetchedTime } from \"../../redux/general/general.actions\";\r\nimport {\r\n  getSelectedQuestion,\r\n  getSelectedQuestionNumber,\r\n  getQuestions,\r\n} from \"../../redux/question/question.selector\";\r\nimport { getRecentFetchedTime } from \"../../redux/general/general.selector\";\r\n\r\nimport \"./quiz-page.styles.scss\";\r\n\r\n//import GridComponent from \"../../components/grid/grid.component\";\r\nimport McqComponent from \"../../components/mcq/mcq.component\";\r\nimport TimerComponent from \"../../components/timer/timer.component\";\r\nimport Loader from \"../../components/loader/loader.component\";\r\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\nimport { useEffect } from \"react\";\r\n// import circuitron from \"../../assets/circuitron.png\";\r\nimport coutchpotato from \"../../assets/CouchPotato.png\";\r\n// import CampusToCorporate from \"../../assets/CampustoCorporate.png\";\r\n// import xeNatus from \"../../assets/xeNatus.png\";\r\n\r\nclass QuizPageCP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mounted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"this.props is \", this.props);\r\n    console.log(\"state before setting mounted to true\", this.state);\r\n    // if(this.firstTime===false)\r\n    // {\r\n    //   this.firstTime=true;\r\n    //   Location.reload(false)\r\n\r\n    // }\r\n    if (this.props.questions.length === 0) {\r\n      axios\r\n        .post(\"http://localhost:3001/c2c/fetchQuestions\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          // this.setState(res.data);\r\n          this.props.setFetchedQuestionsToState(res.data);\r\n          this.props.setSelectedQuestion(1);\r\n          console.log(\"action initialised\");\r\n          this.setState({ mounted: true }, console.log(this.state));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"an error has occurred : \", error);\r\n        });\r\n    } else {\r\n      this.props.setSelectedQuestion(1);\r\n      this.setState({ mounted: true }, () => console.log(this.state));\r\n    }\r\n    console.log(this.props);\r\n    var link =\r\n      \"http://localhost:3001/c2c/getTime/\" + this.props.match.params.authToken;\r\n    console.log(link);\r\n    axios\r\n      .post(link)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status === \"Failure\") {\r\n          this.props.history.push(\"/\");\r\n        } else {\r\n          if (res.data.time <= 0) {\r\n            this.submit(this, this.props.questions);\r\n          }\r\n          this.props.setRecentFetchedTime(res.data.time);\r\n        }\r\n        // // this.setState(res.data);\r\n        // this.props.setFetchedQuestionsToState(res.data);\r\n        // this.props.setSelectedQuestion(1);\r\n        // console.log(\"action initialised\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"an error has occurred : \", error);\r\n      });\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n    console.log(\"Fetched time in main component is\", this.props.fetchedTime);\r\n  }\r\n\r\n  submit = (reference, response) => {\r\n    console.log(\"submit clicked\");\r\n    console.log(\"body while sending is\", response);\r\n    var link =\r\n      \"http://localhost:3001/c2c/saveResponse/\" +\r\n      reference.props.match.params.authToken;\r\n    axios\r\n      .post(link, response)\r\n      .then(function (res) {\r\n        console.log(\"response returned from an endpoint\", res.data.score);\r\n\r\n        reference.props.history.push({\r\n          pathname: \"/thankyou/#!\",\r\n          state: { score: res.data.score },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Network error raised\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"state before rendering\", this.state);\r\n    return !this.state.mounted ? (\r\n      <Loader />\r\n    ) : (\r\n      <Wrapper>\r\n        <div id=\"paddingStyle\" className=\"container-fluid\">\r\n          <div className=\"overlay\">\r\n            <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo\" />\r\n            <div>\r\n              {/* <img src={Xenia21_Logo} width=\"200px\" className=\"EventNameLogo\" /> */}\r\n              <img src={coutchpotato} width=\"200px\" className=\"EventNameLogo\" />\r\n              {/* <img src={CampusToCorporate} className=\"EventNameLogo\" /> */}\r\n            </div>\r\n            <TemporaryDrawer mounted={this.state.mounted} />\r\n            {/* <div id=\"timerRow\" className=\"row\">\r\n              {/* Instructions */}\r\n            {/* <div className=\"col-lg-10 col-md-9 col-sm-2 div1\"></div> */}\r\n            {/* <div className=\"col-lg-2 col-md-2 col-sm-10\"> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            <TimerComponent />\r\n            <div className=\"row\">\r\n              {/* Instructions */}\r\n              <div className=\"col-lg-3 col-md-2 col-sm-12 div1\"></div>\r\n\r\n              <div className=\"col-lg-7 col-md-10 col-sm-1\">\r\n                <McqComponent />\r\n              </div>\r\n            </div>\r\n            <div className=\"row row2\">\r\n              <div className=\"col-lg-2.5 col-md-3 col-sm-11 \"></div>\r\n              <div className=\"col-lg-7 col-md-7 col-sm-1\">\r\n                <Wrapper>\r\n                  <div className=\"row row1\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionPrevious(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                          console.log(this.props);\r\n                        }}\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => this.submit(this, this.props.questions)}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionNext(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                        }}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </div>\r\n                </Wrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  html {\r\n    overflow: hidden;\r\n  }\r\n  .Xenia21Logo{\r\n    margin-top:-10%;\r\n    width:250px;\r\n    height:125px;\r\n  }\r\n  .EventNameLogo{\r\n    margin-top:-15%;\r\n    \r\n    \r\n  }\r\n\r\n  .buttonStyle {\r\n    \r\n    margin-right: 10%;\r\n    background: #f11794;\r\n    border-radius:0;\r\n    margin: 0 20px 0px -20px;\r\n    &:hover {\r\n      background: black;\r\n      border: 2px solid #f11794;\r\n      color: #f11794;\r\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\r\n    }\r\n  }\r\n  .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n  .row1 {\r\n    display: revert;\r\n    margin-left:-12%;\r\n  }\r\n  .row2{\r\n    margin-top:2%;\r\n    margin-left:7%;\r\n  }\r\n  .row {\r\n    dispplay: revert;\r\n  }\r\n  #timerRow {\r\n    margin-top:-12%:\r\n    margin-right: 2%;\r\n   \r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:-2%;\r\n      width:250px;\r\n      height:125px;\r\n    }\r\n    .EventNameLogo{\r\n      margin-top:-3%;\r\n      width:210px;\r\n      height:80px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:0;\r\n      margin-bottom:-10%;\r\n      \r\n    }\r\n    .EventNameLogo{\r\n      margin-top: -10%;\r\n      margin-bottom: -20%;\r\n     \r\n    }\r\n    .row1 {\r\n      margin-left:8%;\r\n    }\r\n  }\r\n`;\r\n\r\n// @media only screen and (min-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-top:-2%;\r\n//     width:280px;\r\n//     height:150px;\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top:-5%;\r\n\r\n//   }\r\n// }\r\n// @media only screen and (max-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-bottom:-10%;\r\n\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top: -10%;\r\n//     margin-bottom: -20%;\r\n\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFetchedQuestionsToState: (questions) =>\r\n    dispatch(setFetchedQuestionsToState(questions)),\r\n  selectedQuestionNext: (num) => {\r\n    if (num === 4) {\r\n    } else {\r\n      dispatch(selectedQuestionNext(num));\r\n    }\r\n  },\r\n  selectedQuestionPrevious: (num) => {\r\n    if (num === 0) {\r\n    } else {\r\n      dispatch(selectedQuestionPrevious(num));\r\n    }\r\n  },\r\n  setSelectedQuestion: (num) => dispatch(setSelectedQuestion(num)),\r\n  setRecentFetchedTime: (time) => dispatch(setRecentFetchedTime(time)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  questions: getQuestions,\r\n  selectedQuestion: getSelectedQuestion,\r\n  selectedQuestionNumber: getSelectedQuestionNumber,\r\n  fetchedTime: getRecentFetchedTime,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(QuizPageCP)\r\n);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-ctc\\quiz-page-ctc.component.jsx",["186","187","188","189","190"],"//prev,next max limits hardcoded change.\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  setFetchedQuestionsToState,\r\n  selectedQuestionNext,\r\n  selectedQuestionPrevious,\r\n  setSelectedQuestion,\r\n  // setRecentFetchedTime\r\n} from \"../../redux/question/question.actions\";\r\nimport { setRecentFetchedTime } from \"../../redux/general/general.actions\";\r\nimport {\r\n  getSelectedQuestion,\r\n  getSelectedQuestionNumber,\r\n  getQuestions,\r\n} from \"../../redux/question/question.selector\";\r\nimport { getRecentFetchedTime } from \"../../redux/general/general.selector\";\r\n\r\nimport \"./quiz-page.styles.scss\";\r\n\r\n//import GridComponent from \"../../components/grid/grid.component\";\r\nimport McqComponent from \"../../components/mcq/mcq.component\";\r\nimport TimerComponent from \"../../components/timer/timer.component\";\r\nimport Loader from \"../../components/loader/loader.component\";\r\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\nimport { useEffect } from \"react\";\r\n// import circuitron from \"../../assets/circuitron.png\";\r\n// import coutchpotato from \"../../assets/CouchPotato.png\";\r\nimport CampusToCorporate from \"../../assets/CampustoCorporate.png\";\r\n// import xeNatus from \"../../assets/xeNatus.png\";\r\n\r\nclass QuizPageCTC extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mounted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"this.props is \", this.props);\r\n    console.log(\"state before setting mounted to true\", this.state);\r\n    // if(this.firstTime===false)\r\n    // {\r\n    //   this.firstTime=true;\r\n    //   Location.reload(false)\r\n\r\n    // }\r\n    if (this.props.questions.length === 0) {\r\n      axios\r\n        .post(\"http://localhost:3001/c2c/fetchQuestions\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          // this.setState(res.data);\r\n          this.props.setFetchedQuestionsToState(res.data);\r\n          this.props.setSelectedQuestion(1);\r\n          console.log(\"action initialised\");\r\n          this.setState({ mounted: true }, console.log(this.state));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"an error has occurred : \", error);\r\n        });\r\n    } else {\r\n      this.props.setSelectedQuestion(1);\r\n      this.setState({ mounted: true }, () => console.log(this.state));\r\n    }\r\n    console.log(this.props);\r\n    var link =\r\n      \"http://localhost:3001/c2c/getTime/\" + this.props.match.params.authToken;\r\n    console.log(link);\r\n    axios\r\n      .post(link)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status === \"Failure\") {\r\n          this.props.history.push(\"/\");\r\n        } else {\r\n          if (res.data.time <= 0) {\r\n            this.submit(this, this.props.questions);\r\n          }\r\n          this.props.setRecentFetchedTime(res.data.time);\r\n        }\r\n        // // this.setState(res.data);\r\n        // this.props.setFetchedQuestionsToState(res.data);\r\n        // this.props.setSelectedQuestion(1);\r\n        // console.log(\"action initialised\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"an error has occurred : \", error);\r\n      });\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n    console.log(\"Fetched time in main component is\", this.props.fetchedTime);\r\n  }\r\n\r\n  submit = (reference, response) => {\r\n    console.log(\"submit clicked\");\r\n    console.log(\"body while sending is\", response);\r\n    var link =\r\n      \"http://localhost:3001/c2c/saveResponse/\" +\r\n      reference.props.match.params.authToken;\r\n    axios\r\n      .post(link, response)\r\n      .then(function (res) {\r\n        console.log(\"response returned from an endpoint\", res.data.score);\r\n\r\n        reference.props.history.push({\r\n          pathname: \"/thankyou/#!\",\r\n          state: { score: res.data.score },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Network error raised\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"state before rendering\", this.state);\r\n    return !this.state.mounted ? (\r\n      <Loader />\r\n    ) : (\r\n      <Wrapper>\r\n        <div id=\"paddingStyle\" className=\"container-fluid\">\r\n          <div className=\"overlay\">\r\n            <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo\" />\r\n            <div>\r\n              {/* <img src={Xenia21_Logo} width=\"200px\" className=\"EventNameLogo\" /> */}\r\n              {/* <img src={circuitron} width=\"200px\" className=\"EventNameLogo\" /> */}\r\n              <img src={CampusToCorporate} className=\"EventNameLogo\" />\r\n            </div>\r\n            <TemporaryDrawer mounted={this.state.mounted} />\r\n            {/* <div id=\"timerRow\" className=\"row\">\r\n              {/* Instructions */}\r\n            {/* <div className=\"col-lg-10 col-md-9 col-sm-2 div1\"></div> */}\r\n            {/* <div className=\"col-lg-2 col-md-2 col-sm-10\"> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            <TimerComponent />\r\n            <div className=\"row\">\r\n              {/* Instructions */}\r\n              <div className=\"col-lg-3 col-md-2 col-sm-12 div1\"></div>\r\n\r\n              <div className=\"col-lg-7 col-md-10 col-sm-1\">\r\n                <McqComponent />\r\n              </div>\r\n            </div>\r\n            <div className=\"row row2\">\r\n              <div className=\"col-lg-2.5 col-md-3 col-sm-11 \"></div>\r\n              <div className=\"col-lg-7 col-md-7 col-sm-1\">\r\n                <Wrapper>\r\n                  <div className=\"row row1\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionPrevious(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                          console.log(this.props);\r\n                        }}\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => this.submit(this, this.props.questions)}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionNext(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                        }}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </div>\r\n                </Wrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  html {\r\n    overflow: hidden;\r\n  }\r\n  .Xenia21Logo{\r\n    margin-top:-10%;\r\n    width:250px;\r\n    height:125px;\r\n  }\r\n  .EventNameLogo{\r\n    margin-top:-15%;\r\n    \r\n    \r\n  }\r\n\r\n  .buttonStyle {\r\n    \r\n    margin-right: 10%;\r\n    background: #f11794;\r\n    border-radius:0;\r\n    margin: 0 20px 0px -20px;\r\n    &:hover {\r\n      background: black;\r\n      border: 2px solid #f11794;\r\n      color: #f11794;\r\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\r\n    }\r\n  }\r\n  .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n  .row1 {\r\n    display: revert;\r\n    margin-left:-12%;\r\n  }\r\n  .row2{\r\n    margin-top:2%;\r\n    margin-left:7%;\r\n  }\r\n  .row {\r\n    dispplay: revert;\r\n  }\r\n  #timerRow {\r\n    margin-top:-12%:\r\n    margin-right: 2%;\r\n   \r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:-2%;\r\n      width:250px;\r\n      height:125px;\r\n    }\r\n    .EventNameLogo{\r\n      margin-top:-3%;\r\n      width:210px;\r\n      height:80px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:0;\r\n      margin-bottom:-10%;\r\n      \r\n    }\r\n    .EventNameLogo{\r\n      margin-top: -10%;\r\n      margin-bottom: -20%;\r\n     \r\n    }\r\n    .row1 {\r\n      margin-left:8%;\r\n    }\r\n  }\r\n`;\r\n\r\n// @media only screen and (min-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-top:-2%;\r\n//     width:280px;\r\n//     height:150px;\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top:-5%;\r\n\r\n//   }\r\n// }\r\n// @media only screen and (max-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-bottom:-10%;\r\n\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top: -10%;\r\n//     margin-bottom: -20%;\r\n\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFetchedQuestionsToState: (questions) =>\r\n    dispatch(setFetchedQuestionsToState(questions)),\r\n  selectedQuestionNext: (num) => {\r\n    if (num === 4) {\r\n    } else {\r\n      dispatch(selectedQuestionNext(num));\r\n    }\r\n  },\r\n  selectedQuestionPrevious: (num) => {\r\n    if (num === 0) {\r\n    } else {\r\n      dispatch(selectedQuestionPrevious(num));\r\n    }\r\n  },\r\n  setSelectedQuestion: (num) => dispatch(setSelectedQuestion(num)),\r\n  setRecentFetchedTime: (time) => dispatch(setRecentFetchedTime(time)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  questions: getQuestions,\r\n  selectedQuestion: getSelectedQuestion,\r\n  selectedQuestionNumber: getSelectedQuestionNumber,\r\n  fetchedTime: getRecentFetchedTime,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(QuizPageCTC)\r\n);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-xenatus\\quiz-page-xenatus.component.jsx",["191","192","193","194","195"],"//prev,next max limits hardcoded change.\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  setFetchedQuestionsToState,\r\n  selectedQuestionNext,\r\n  selectedQuestionPrevious,\r\n  setSelectedQuestion,\r\n  // setRecentFetchedTime\r\n} from \"../../redux/question/question.actions\";\r\nimport { setRecentFetchedTime } from \"../../redux/general/general.actions\";\r\nimport {\r\n  getSelectedQuestion,\r\n  getSelectedQuestionNumber,\r\n  getQuestions,\r\n} from \"../../redux/question/question.selector\";\r\nimport { getRecentFetchedTime } from \"../../redux/general/general.selector\";\r\n\r\nimport \"./quiz-page.styles.scss\";\r\n\r\n//import GridComponent from \"../../components/grid/grid.component\";\r\nimport McqComponent from \"../../components/mcq/mcq.component\";\r\nimport TimerComponent from \"../../components/timer/timer.component\";\r\nimport Loader from \"../../components/loader/loader.component\";\r\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\nimport { useEffect } from \"react\";\r\n// import circuitron from \"../../assets/circuitron.png\";\r\n// import coutchpotato from \"../../assets/CouchPotato.png\";\r\n// import CampusToCorporate from \"../../assets/CampustoCorporate.png\";\r\nimport xeNatus from \"../../assets/xeNatus.png\";\r\n\r\nclass QuizPageXenatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mounted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"this.props is \", this.props);\r\n    console.log(\"state before setting mounted to true\", this.state);\r\n    // if(this.firstTime===false)\r\n    // {\r\n    //   this.firstTime=true;\r\n    //   Location.reload(false)\r\n\r\n    // }\r\n    if (this.props.questions.length === 0) {\r\n      axios\r\n        .post(\"http://localhost:3001/c2c/fetchQuestions\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          // this.setState(res.data);\r\n          this.props.setFetchedQuestionsToState(res.data);\r\n          this.props.setSelectedQuestion(1);\r\n          console.log(\"action initialised\");\r\n          this.setState({ mounted: true }, console.log(this.state));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"an error has occurred : \", error);\r\n        });\r\n    } else {\r\n      this.props.setSelectedQuestion(1);\r\n      this.setState({ mounted: true }, () => console.log(this.state));\r\n    }\r\n    console.log(this.props);\r\n    var link =\r\n      \"http://localhost:3001/c2c/getTime/\" + this.props.match.params.authToken;\r\n    console.log(link);\r\n    axios\r\n      .post(link)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status === \"Failure\") {\r\n          this.props.history.push(\"/\");\r\n        } else {\r\n          if (res.data.time <= 0) {\r\n            this.submit(this, this.props.questions);\r\n          }\r\n          this.props.setRecentFetchedTime(res.data.time);\r\n        }\r\n        // // this.setState(res.data);\r\n        // this.props.setFetchedQuestionsToState(res.data);\r\n        // this.props.setSelectedQuestion(1);\r\n        // console.log(\"action initialised\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"an error has occurred : \", error);\r\n      });\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n    console.log(\"Fetched time in main component is\", this.props.fetchedTime);\r\n  }\r\n\r\n  submit = (reference, response) => {\r\n    console.log(\"submit clicked\");\r\n    console.log(\"body while sending is\", response);\r\n    var link =\r\n      \"http://localhost:3001/c2c/saveResponse/\" +\r\n      reference.props.match.params.authToken;\r\n    axios\r\n      .post(link, response)\r\n      .then(function (res) {\r\n        console.log(\"response returned from an endpoint\", res.data.score);\r\n\r\n        reference.props.history.push({\r\n          pathname: \"/thankyou/#!\",\r\n          state: { score: res.data.score },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Network error raised\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"state before rendering\", this.state);\r\n    return !this.state.mounted ? (\r\n      <Loader />\r\n    ) : (\r\n      <Wrapper>\r\n        <div id=\"paddingStyle\" className=\"container-fluid\">\r\n          <div className=\"overlay\">\r\n            <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo\" />\r\n            <div>\r\n              {/* <img src={Xenia21_Logo} width=\"200px\" className=\"EventNameLogo\" /> */}\r\n              <img src={xeNatus} width=\"200px\" className=\"EventNameLogo\" />\r\n              {/* <img src={CampusToCorporate} className=\"EventNameLogo\" /> */}\r\n            </div>\r\n            <TemporaryDrawer mounted={this.state.mounted} />\r\n            {/* <div id=\"timerRow\" className=\"row\">\r\n              {/* Instructions */}\r\n            {/* <div className=\"col-lg-10 col-md-9 col-sm-2 div1\"></div> */}\r\n            {/* <div className=\"col-lg-2 col-md-2 col-sm-10\"> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            <TimerComponent />\r\n            <div className=\"row\">\r\n              {/* Instructions */}\r\n              <div className=\"col-lg-3 col-md-2 col-sm-12 div1\"></div>\r\n\r\n              <div className=\"col-lg-7 col-md-10 col-sm-1\">\r\n                <McqComponent />\r\n              </div>\r\n            </div>\r\n            <div className=\"row row2\">\r\n              <div className=\"col-lg-2.5 col-md-3 col-sm-11 \"></div>\r\n              <div className=\"col-lg-7 col-md-7 col-sm-1\">\r\n                <Wrapper>\r\n                  <div className=\"row row1\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionPrevious(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                          console.log(this.props);\r\n                        }}\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => this.submit(this, this.props.questions)}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionNext(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                        }}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </div>\r\n                </Wrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  html {\r\n    overflow: hidden;\r\n  }\r\n  .Xenia21Logo{\r\n    margin-top:-10%;\r\n    width:250px;\r\n    height:125px;\r\n  }\r\n  .EventNameLogo{\r\n    margin-top:-15%;\r\n    \r\n    \r\n  }\r\n\r\n  .buttonStyle {\r\n    \r\n    margin-right: 10%;\r\n    background: #f11794;\r\n    border-radius:0;\r\n    margin: 0 20px 0px -20px;\r\n    &:hover {\r\n      background: black;\r\n      border: 2px solid #f11794;\r\n      color: #f11794;\r\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\r\n    }\r\n  }\r\n  .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n  .row1 {\r\n    display: revert;\r\n    margin-left:-12%;\r\n  }\r\n  .row2{\r\n    margin-top:2%;\r\n    margin-left:7%;\r\n  }\r\n  .row {\r\n    dispplay: revert;\r\n  }\r\n  #timerRow {\r\n    margin-top:-12%:\r\n    margin-right: 2%;\r\n   \r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:-2%;\r\n      width:250px;\r\n      height:125px;\r\n    }\r\n    .EventNameLogo{\r\n      margin-top:-3%;\r\n      width:210px;\r\n      height:80px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:0;\r\n      margin-bottom:-10%;\r\n      \r\n    }\r\n    .EventNameLogo{\r\n      margin-top: -10%;\r\n      margin-bottom: -20%;\r\n     \r\n    }\r\n    .row1 {\r\n      margin-left:8%;\r\n    }\r\n  }\r\n`;\r\n\r\n// @media only screen and (min-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-top:-2%;\r\n//     width:280px;\r\n//     height:150px;\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top:-5%;\r\n\r\n//   }\r\n// }\r\n// @media only screen and (max-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-bottom:-10%;\r\n\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top: -10%;\r\n//     margin-bottom: -20%;\r\n\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFetchedQuestionsToState: (questions) =>\r\n    dispatch(setFetchedQuestionsToState(questions)),\r\n  selectedQuestionNext: (num) => {\r\n    if (num === 4) {\r\n    } else {\r\n      dispatch(selectedQuestionNext(num));\r\n    }\r\n  },\r\n  selectedQuestionPrevious: (num) => {\r\n    if (num === 0) {\r\n    } else {\r\n      dispatch(selectedQuestionPrevious(num));\r\n    }\r\n  },\r\n  setSelectedQuestion: (num) => dispatch(setSelectedQuestion(num)),\r\n  setRecentFetchedTime: (time) => dispatch(setRecentFetchedTime(time)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  questions: getQuestions,\r\n  selectedQuestion: getSelectedQuestion,\r\n  selectedQuestionNumber: getSelectedQuestionNumber,\r\n  fetchedTime: getRecentFetchedTime,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(QuizPageXenatus)\r\n);\r\n","C:\\Users\\MY\\Desktop\\Shantanu\\React\\Xenia\\Xenia_mcq_platform\\client\\src\\pages\\quiz-page-circuitron\\quiz-page-circuitron.component.jsx",["196","197","198","199","200"],"//prev,next max limits hardcoded change.\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  setFetchedQuestionsToState,\r\n  selectedQuestionNext,\r\n  selectedQuestionPrevious,\r\n  setSelectedQuestion,\r\n  // setRecentFetchedTime\r\n} from \"../../redux/question/question.actions\";\r\nimport { setRecentFetchedTime } from \"../../redux/general/general.actions\";\r\nimport {\r\n  getSelectedQuestion,\r\n  getSelectedQuestionNumber,\r\n  getQuestions,\r\n} from \"../../redux/question/question.selector\";\r\nimport { getRecentFetchedTime } from \"../../redux/general/general.selector\";\r\n\r\nimport \"./quiz-page.styles.scss\";\r\n\r\n//import GridComponent from \"../../components/grid/grid.component\";\r\nimport McqComponent from \"../../components/mcq/mcq.component\";\r\nimport TimerComponent from \"../../components/timer/timer.component\";\r\nimport Loader from \"../../components/loader/loader.component\";\r\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Xenia21_Logo from \"../../assets/Xenia21_Text.png\";\r\nimport { useEffect } from \"react\";\r\nimport circuitron from \"../../assets/circuitron.png\";\r\n// import coutchpotato from \"../../assets/CouchPotato.png\";\r\n// import CampusToCorporate from \"../../assets/CampustoCorporate.png\";\r\n// import xeNatus from \"../../assets/xeNatus.png\";\r\n\r\nclass QuizPageCircuitRon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mounted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"this.props is \", this.props);\r\n    console.log(\"state before setting mounted to true\", this.state);\r\n    // if(this.firstTime===false)\r\n    // {\r\n    //   this.firstTime=true;\r\n    //   Location.reload(false)\r\n\r\n    // }\r\n    if (this.props.questions.length === 0) {\r\n      axios\r\n        .post(\"http://localhost:3001/c2c/fetchQuestions\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          // this.setState(res.data);\r\n          this.props.setFetchedQuestionsToState(res.data);\r\n          this.props.setSelectedQuestion(1);\r\n          console.log(\"action initialised\");\r\n          this.setState({ mounted: true }, console.log(this.state));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"an error has occurred : \", error);\r\n        });\r\n    } else {\r\n      this.props.setSelectedQuestion(1);\r\n      this.setState({ mounted: true }, () => console.log(this.state));\r\n    }\r\n    console.log(this.props);\r\n    var link =\r\n      \"http://localhost:3001/c2c/getTime/\" + this.props.match.params.authToken;\r\n    console.log(link);\r\n    axios\r\n      .post(link)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status === \"Failure\") {\r\n          this.props.history.push(\"/\");\r\n        } else {\r\n          if (res.data.time <= 0) {\r\n            this.submit(this, this.props.questions);\r\n          }\r\n          this.props.setRecentFetchedTime(res.data.time);\r\n        }\r\n        // // this.setState(res.data);\r\n        // this.props.setFetchedQuestionsToState(res.data);\r\n        // this.props.setSelectedQuestion(1);\r\n        // console.log(\"action initialised\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"an error has occurred : \", error);\r\n      });\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.fetchedTime <= 0) {\r\n      console.log(\"here in if of will update\");\r\n      this.submit(this, this.props.questions);\r\n    }\r\n    console.log(\"Fetched time in main component is\", this.props.fetchedTime);\r\n  }\r\n\r\n  submit = (reference, response) => {\r\n    console.log(\"submit clicked\");\r\n    console.log(\"body while sending is\", response);\r\n    var link =\r\n      \"http://localhost:3001/c2c/saveResponse/\" +\r\n      reference.props.match.params.authToken;\r\n    axios\r\n      .post(link, response)\r\n      .then(function (res) {\r\n        console.log(\"response returned from an endpoint\", res.data.score);\r\n\r\n        reference.props.history.push({\r\n          pathname: \"/thankyou/#!\",\r\n          state: { score: res.data.score },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Network error raised\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"state before rendering\", this.state);\r\n    return !this.state.mounted ? (\r\n      <Loader />\r\n    ) : (\r\n      <Wrapper>\r\n        <div id=\"paddingStyle\" className=\"container-fluid\">\r\n          <div className=\"overlay\">\r\n            <img src={Xenia21_Logo} width=\"200px\" className=\"Xenia21Logo\" />\r\n            <div>\r\n              {/* <img src={Xenia21_Logo} width=\"200px\" className=\"EventNameLogo\" /> */}\r\n              <img src={circuitron} width=\"200px\" className=\"EventNameLogo\" />\r\n              {/* <img src={CampusToCorporate} className=\"EventNameLogo\" /> */}\r\n            </div>\r\n            <TemporaryDrawer mounted={this.state.mounted} />\r\n            {/* <div id=\"timerRow\" className=\"row\">\r\n              {/* Instructions */}\r\n            {/* <div className=\"col-lg-10 col-md-9 col-sm-2 div1\"></div> */}\r\n            {/* <div className=\"col-lg-2 col-md-2 col-sm-10\"> */}\r\n            {/* </div> */}\r\n            {/* </div> */}\r\n            <TimerComponent />\r\n            <div className=\"row\">\r\n              {/* Instructions */}\r\n              <div className=\"col-lg-3 col-md-2 col-sm-12 div1\"></div>\r\n\r\n              <div className=\"col-lg-7 col-md-10 col-sm-1\">\r\n                <McqComponent />\r\n              </div>\r\n            </div>\r\n            <div className=\"row row2\">\r\n              <div className=\"col-lg-2.5 col-md-3 col-sm-11 \"></div>\r\n              <div className=\"col-lg-7 col-md-7 col-sm-1\">\r\n                <Wrapper>\r\n                  <div className=\"row row1\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionPrevious(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                          console.log(this.props);\r\n                        }}\r\n                      >\r\n                        Previous\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => this.submit(this, this.props.questions)}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"buttonStyle\"\r\n                        onClick={() => {\r\n                          this.props.selectedQuestionNext(\r\n                            this.props.selectedQuestionNumber\r\n                          );\r\n                        }}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </div>\r\n                </Wrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  html {\r\n    overflow: hidden;\r\n  }\r\n  .Xenia21Logo{\r\n    margin-top:-10%;\r\n    width:250px;\r\n    height:125px;\r\n  }\r\n  .EventNameLogo{\r\n    margin-top:-15%;\r\n    \r\n    \r\n  }\r\n\r\n  .buttonStyle {\r\n    \r\n    margin-right: 10%;\r\n    background: #f11794;\r\n    border-radius:0;\r\n    margin: 0 20px 0px -20px;\r\n    &:hover {\r\n      background: black;\r\n      border: 2px solid #f11794;\r\n      color: #f11794;\r\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\r\n    }\r\n  }\r\n  .container-fluid {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n  .row1 {\r\n    display: revert;\r\n    margin-left:-12%;\r\n  }\r\n  .row2{\r\n    margin-top:2%;\r\n    margin-left:7%;\r\n  }\r\n  .row {\r\n    dispplay: revert;\r\n  }\r\n  #timerRow {\r\n    margin-top:-12%:\r\n    margin-right: 2%;\r\n   \r\n  }\r\n  @media only screen and (min-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:-2%;\r\n      width:250px;\r\n      height:125px;\r\n    }\r\n    .EventNameLogo{\r\n      margin-top:-3%;\r\n      width:210px;\r\n      height:80px;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    .Xenia21Logo{\r\n      margin-top:0;\r\n      margin-bottom:-10%;\r\n      \r\n    }\r\n    .EventNameLogo{\r\n      margin-top: -10%;\r\n      margin-bottom: -20%;\r\n     \r\n    }\r\n    .row1 {\r\n      margin-left:8%;\r\n    }\r\n  }\r\n`;\r\n\r\n// @media only screen and (min-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-top:-2%;\r\n//     width:280px;\r\n//     height:150px;\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top:-5%;\r\n\r\n//   }\r\n// }\r\n// @media only screen and (max-width: 600px) {\r\n//   .Xenia21Logo{\r\n//     margin-bottom:-10%;\r\n\r\n//   }\r\n//   .EventNameLogo{\r\n//     margin-top: -10%;\r\n//     margin-bottom: -20%;\r\n\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFetchedQuestionsToState: (questions) =>\r\n    dispatch(setFetchedQuestionsToState(questions)),\r\n  selectedQuestionNext: (num) => {\r\n    if (num === 4) {\r\n    } else {\r\n      dispatch(selectedQuestionNext(num));\r\n    }\r\n  },\r\n  selectedQuestionPrevious: (num) => {\r\n    if (num === 0) {\r\n    } else {\r\n      dispatch(selectedQuestionPrevious(num));\r\n    }\r\n  },\r\n  setSelectedQuestion: (num) => dispatch(setSelectedQuestion(num)),\r\n  setRecentFetchedTime: (time) => dispatch(setRecentFetchedTime(time)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  questions: getQuestions,\r\n  selectedQuestion: getSelectedQuestion,\r\n  selectedQuestionNumber: getSelectedQuestionNumber,\r\n  fetchedTime: getRecentFetchedTime,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(QuizPageCircuitRon)\r\n);\r\n",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":18},{"ruleId":"205","severity":1,"message":"209","line":7,"column":8,"nodeType":"207","messageId":"208","endLine":7,"endColumn":19},{"ruleId":"205","severity":1,"message":"210","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":23},{"ruleId":"205","severity":1,"message":"211","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":26},{"ruleId":"205","severity":1,"message":"212","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":14},{"ruleId":"205","severity":1,"message":"213","line":9,"column":15,"nodeType":"207","messageId":"208","endLine":9,"endColumn":23},{"ruleId":"205","severity":1,"message":"214","line":8,"column":31,"nodeType":"207","messageId":"208","endLine":8,"endColumn":37},{"ruleId":"215","severity":1,"message":"216","line":25,"column":9,"nodeType":"217","endLine":25,"endColumn":74},{"ruleId":"205","severity":1,"message":"218","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":19},{"ruleId":"205","severity":1,"message":"219","line":11,"column":21,"nodeType":"207","messageId":"208","endLine":11,"endColumn":24},{"ruleId":"205","severity":1,"message":"220","line":11,"column":26,"nodeType":"207","messageId":"208","endLine":11,"endColumn":29},{"ruleId":"205","severity":1,"message":"214","line":11,"column":31,"nodeType":"207","messageId":"208","endLine":11,"endColumn":37},{"ruleId":"215","severity":1,"message":"216","line":23,"column":13,"nodeType":"217","endLine":23,"endColumn":77},{"ruleId":"205","severity":1,"message":"221","line":39,"column":8,"nodeType":"207","messageId":"208","endLine":39,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":41,"column":10,"nodeType":"207","messageId":"208","endLine":41,"endColumn":20},{"ruleId":"205","severity":1,"message":"223","line":43,"column":10,"nodeType":"207","messageId":"208","endLine":43,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":156,"column":13,"nodeType":"217","endLine":156,"endColumn":77},{"ruleId":"215","severity":1,"message":"216","line":159,"column":15,"nodeType":"217","endLine":159,"endColumn":79},{"ruleId":"205","severity":1,"message":"223","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":19},{"ruleId":"205","severity":1,"message":"224","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":23},{"ruleId":"205","severity":1,"message":"225","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"223","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"226","line":1,"column":38,"nodeType":"207","messageId":"208","endLine":1,"endColumn":44},{"ruleId":"227","severity":1,"message":"228","line":43,"column":6,"nodeType":"229","endLine":43,"endColumn":15,"suggestions":"230"},{"ruleId":"205","severity":1,"message":"231","line":16,"column":8,"nodeType":"207","messageId":"208","endLine":16,"endColumn":15},{"ruleId":"205","severity":1,"message":"221","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":18},{"ruleId":"205","severity":1,"message":"232","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":17},{"ruleId":"205","severity":1,"message":"233","line":34,"column":10,"nodeType":"207","messageId":"208","endLine":34,"endColumn":15},{"ruleId":"205","severity":1,"message":"234","line":34,"column":17,"nodeType":"207","messageId":"208","endLine":34,"endColumn":25},{"ruleId":"205","severity":1,"message":"235","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":14},{"ruleId":"205","severity":1,"message":"236","line":7,"column":8,"nodeType":"207","messageId":"208","endLine":7,"endColumn":17},{"ruleId":"205","severity":1,"message":"237","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":13},{"ruleId":"205","severity":1,"message":"221","line":35,"column":8,"nodeType":"207","messageId":"208","endLine":35,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":37,"column":10,"nodeType":"207","messageId":"208","endLine":37,"endColumn":20},{"ruleId":"205","severity":1,"message":"223","line":39,"column":10,"nodeType":"207","messageId":"208","endLine":39,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":146,"column":13,"nodeType":"217","endLine":146,"endColumn":77},{"ruleId":"215","severity":1,"message":"216","line":149,"column":15,"nodeType":"217","endLine":149,"endColumn":81},{"ruleId":"205","severity":1,"message":"221","line":35,"column":8,"nodeType":"207","messageId":"208","endLine":35,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":37,"column":10,"nodeType":"207","messageId":"208","endLine":37,"endColumn":20},{"ruleId":"205","severity":1,"message":"223","line":39,"column":10,"nodeType":"207","messageId":"208","endLine":39,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":146,"column":13,"nodeType":"217","endLine":146,"endColumn":77},{"ruleId":"215","severity":1,"message":"216","line":150,"column":15,"nodeType":"217","endLine":150,"endColumn":72},{"ruleId":"205","severity":1,"message":"221","line":35,"column":8,"nodeType":"207","messageId":"208","endLine":35,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":37,"column":10,"nodeType":"207","messageId":"208","endLine":37,"endColumn":20},{"ruleId":"205","severity":1,"message":"223","line":39,"column":10,"nodeType":"207","messageId":"208","endLine":39,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":146,"column":13,"nodeType":"217","endLine":146,"endColumn":77},{"ruleId":"215","severity":1,"message":"216","line":149,"column":15,"nodeType":"217","endLine":149,"endColumn":76},{"ruleId":"205","severity":1,"message":"221","line":35,"column":8,"nodeType":"207","messageId":"208","endLine":35,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":37,"column":10,"nodeType":"207","messageId":"208","endLine":37,"endColumn":20},{"ruleId":"205","severity":1,"message":"223","line":39,"column":10,"nodeType":"207","messageId":"208","endLine":39,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":146,"column":13,"nodeType":"217","endLine":146,"endColumn":77},{"ruleId":"215","severity":1,"message":"216","line":149,"column":15,"nodeType":"217","endLine":149,"endColumn":79},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'QuizPageCP' is defined but never used.","Identifier","unusedVar","'QuizPageCTC' is defined but never used.","'QuizPageXenatus' is defined but never used.","'QuizPageCircuitRon' is defined but never used.","'Loader' is defined but never used.","'setColor' is assigned a value but never used.","'Navbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","'AnswerComponent' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'fetchedTime' and 'setRecentFetchedTime'. Either include them or remove the dependency array. If 'setRecentFetchedTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["240"],"'Divider' is defined but never used.","'CardMedia' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Button' is defined but never used.","'FormLabel' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},"Update the dependencies array to be: [counter, fetchedTime, setRecentFetchedTime]",{"range":"243","text":"244"},[1096,1105],"[counter, fetchedTime, setRecentFetchedTime]"]