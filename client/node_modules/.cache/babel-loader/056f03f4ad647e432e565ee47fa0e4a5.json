{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/grid/grid.component.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport styled from \"styled-components\";\nimport { numbers } from \"../../utils/number\";\nimport { Button } from \"@material-ui/core\";\nimport { setSelectedQuestion } from '../../redux/question/question.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = ({\n  setSelectedQuestion\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-box\",\n          children: numbers.map(number => {\n            const {\n              id,\n              num\n            } = number;\n            return /*#__PURE__*/_jsxDEV(Button, {\n              className: \"small-rectangle\",\n              onClick: () => setSelectedQuestion(num),\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: num\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Grid;\nconst Wrapper = styled.section`\n  .grid {\n    display: flex;\n  }\n  .rectangle {\n    background: transparent repeat-x scroll center top transparent;\n    position: absolute;\n    top: 0%;\n    left: 3%;\n    min-height: 100%;\n    width: 100%;\n    background-color: transparent;\n\n    clear: both;\n    overflow-x: hidden; /* Hide horizontal scrollbar */\n    overflow-y: scroll;\n    scrollbar-width: none;\n  }\n  .rectangle::-webkit-scrollbar {\n    display: none; /* Safari and Chrome */\n  }\n  .number-box {\n    position: absolute;\n    top: 1rem;\n    left: 0.6%;\n    justify-content: space-around;\n\n    font-weight: bold;\n  }\n  .small-rectangle {\n    background-color: var(--explorebtn);\n    background-color: cyan;\n    box-shadow: 1px 1px 2px black, 0 0 20px cyan, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid cyan;\n      color: cyan;\n      box-shadow: 1px 1px 2px black, 0 0 45px cyan, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n`;\n_c2 = Wrapper;\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedQuestion: question => dispatch(setSelectedQuestion(question))\n});\n\nexport default connect(null, mapDispatchToProps)(Grid);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/grid/grid.component.jsx"],"names":["React","connect","styled","numbers","Button","setSelectedQuestion","Grid","map","number","id","num","Wrapper","section","mapDispatchToProps","dispatch","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAAQC,mBAAR,QAAkC,uCAAlC;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAA2B;AACtC,sBACE,QAAC,OAAD;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGF,OAAO,CAACI,GAAR,CAAaC,MAAD,IAAY;AACvB,kBAAM;AAAEC,cAAAA,EAAF;AAAMC,cAAAA;AAAN,gBAAcF,MAApB;AACA,gCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAA6C,cAAA,OAAO,EAAE,MAAIH,mBAAmB,CAACK,GAAD,CAA7E;AAAA,qCACE;AAAA,0BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,eAAyCD,EAAzC;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAPA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;KAAMH,I;AAqBN,MAAMK,OAAO,GAAGT,MAAM,CAACU,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApDA;MAAMD,O;;AAuDN,MAAME,kBAAkB,GAACC,QAAQ,KAAG;AAClCT,EAAAA,mBAAmB,EAACU,QAAQ,IAAED,QAAQ,CAACT,mBAAmB,CAACU,QAAD,CAApB;AADJ,CAAH,CAAjC;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAMY,kBAAN,CAAP,CAAiCP,IAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\n\nimport styled from \"styled-components\";\n\n\nimport { numbers } from \"../../utils/number\";\nimport { Button } from \"@material-ui/core\";\n\nimport {setSelectedQuestion} from '../../redux/question/question.actions';\n\n\nconst Grid = ({setSelectedQuestion}) => {\n  return (\n    <Wrapper>\n      <section className=\"grid\">\n        <div className=\"rectangle\">\n          <div className=\"number-box\">\n            {numbers.map((number) => {\n              const { id, num } = number;\n              return (\n                <Button className=\"small-rectangle\" key={id} onClick={()=>setSelectedQuestion(num)}>\n                  <h4>{num}</h4>\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.section`\n  .grid {\n    display: flex;\n  }\n  .rectangle {\n    background: transparent repeat-x scroll center top transparent;\n    position: absolute;\n    top: 0%;\n    left: 3%;\n    min-height: 100%;\n    width: 100%;\n    background-color: transparent;\n\n    clear: both;\n    overflow-x: hidden; /* Hide horizontal scrollbar */\n    overflow-y: scroll;\n    scrollbar-width: none;\n  }\n  .rectangle::-webkit-scrollbar {\n    display: none; /* Safari and Chrome */\n  }\n  .number-box {\n    position: absolute;\n    top: 1rem;\n    left: 0.6%;\n    justify-content: space-around;\n\n    font-weight: bold;\n  }\n  .small-rectangle {\n    background-color: var(--explorebtn);\n    background-color: cyan;\n    box-shadow: 1px 1px 2px black, 0 0 20px cyan, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid cyan;\n      color: cyan;\n      box-shadow: 1px 1px 2px black, 0 0 45px cyan, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n`;\n\n\nconst mapDispatchToProps=dispatch=>({\n  setSelectedQuestion:question=>dispatch(setSelectedQuestion(question))\n})\n\n\nexport default connect(null,mapDispatchToProps)(Grid);\n"]},"metadata":{},"sourceType":"module"}