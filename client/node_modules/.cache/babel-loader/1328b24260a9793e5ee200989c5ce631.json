{"ast":null,"code":"// import { QuestionAnswerSharp } from '@material-ui/icons';\nimport { QuestionActionTypes } from './question.types';\nconst INITIAL_STATE = {\n  questions: [{\n    content: '',\n    answers: [{\n      id: 0,\n      text: \"\"\n    }, {\n      id: 1,\n      text: \"\"\n    }, {\n      id: 2,\n      text: \"\"\n    }, {\n      id: 3,\n      text: \"\"\n    }],\n    selectedAnswer: '',\n    marked: false\n  }],\n  selectedQuestionNumber: 0,\n  selectedQuestion: {\n    content: '',\n    answers: [{\n      id: 0,\n      text: \"\"\n    }, {\n      id: 1,\n      text: \"\"\n    }, {\n      id: 2,\n      text: \"\"\n    }, {\n      id: 3,\n      text: \"\"\n    }],\n    selectedAnswer: ''\n  },\n  recentFetchedTime: 3600\n};\n\nconst questionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case QuestionActionTypes.SET_FETCHED_QUESTIONS_TO_STATE:\n      return { ...state,\n        questions: action.payload\n      };\n\n    case QuestionActionTypes.SET_SELECTED_QUESTION:\n      return { ...state,\n        selectedQuestion: state.questions[action.payload],\n        selectedQuestionNumber: action.payload\n      };\n\n    case QuestionActionTypes.SELECTED_QUESTION_NEXT:\n      return { ...state,\n        selectedQuestion: state.questions[action.payload],\n        selectedQuestionNumber: action.payload\n      };\n\n    case QuestionActionTypes.SELECTED_QUESTION_PREVIOUS:\n      return { ...state,\n        selectedQuestion: state.questions[action.payload],\n        selectedQuestionNumber: action.payload\n      };\n\n    case QuestionActionTypes.SET_SELECTED_ANSWER:\n      var Questions = state.questions;\n      var question = Questions[state.selectedQuestionNumber];\n      question.selectedAnswer = action.payload;\n      question.marked = true;\n      Questions[state.selectedQuestionNumber] = question;\n      return { ...state,\n        questions: Questions,\n        selectedQuestion: { ...state.selectedQuestion,\n          selectedAnswer: action.payload,\n          marked: true\n        }\n      };\n    // case QuestionActionTypes.SET_RECENT_FETCHED_TIME:\n    //     return{\n    //         ...state,\n    //         recentFetchedTime:action.payload\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport default questionReducer;","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/redux/question/question.reducer.js"],"names":["QuestionActionTypes","INITIAL_STATE","questions","content","answers","id","text","selectedAnswer","marked","selectedQuestionNumber","selectedQuestion","recentFetchedTime","questionReducer","state","action","type","SET_FETCHED_QUESTIONS_TO_STATE","payload","SET_SELECTED_QUESTION","SELECTED_QUESTION_NEXT","SELECTED_QUESTION_PREVIOUS","SET_SELECTED_ANSWER","Questions","question"],"mappings":"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","sourcesContent":["// import { QuestionAnswerSharp } from '@material-ui/icons';\nimport {QuestionActionTypes} from './question.types';\n\nconst INITIAL_STATE={\n     questions:[\n        {content:'',\n        answers:[\n           {\n               id:0,\n               text:\"\"\n           },\n           {\n               id:1,\n               text:\"\"\n           },\n           {\n               id:2,\n               text:\"\"\n           },\n           {\n               id:3,\n               text:\"\"\n           },\n        ],\n        selectedAnswer:'',\n        marked:false\n    }\n     ],\n     selectedQuestionNumber:0,\n     selectedQuestion:{\n         content:'',\n         answers:[\n            {\n                id:0,\n                text:\"\"\n            },\n            {\n                id:1,\n                text:\"\"\n            },\n            {\n                id:2,\n                text:\"\"\n            },\n            {\n                id:3,\n                text:\"\"\n            },\n         ],\n         selectedAnswer:''\n     },\n     recentFetchedTime:3600\n }\n \n const questionReducer=(state=INITIAL_STATE,action)=>{\n     switch(action.type){\n        case QuestionActionTypes.SET_FETCHED_QUESTIONS_TO_STATE:\n            return{\n                ...state,\n                questions:action.payload\n            }\n        case QuestionActionTypes.SET_SELECTED_QUESTION:\n            return{\n                ...state,\n                selectedQuestion:state.questions[action.payload],\n                selectedQuestionNumber:action.payload\n            }\n        case QuestionActionTypes.SELECTED_QUESTION_NEXT:\n            return{\n                ...state,\n                selectedQuestion:state.questions[action.payload],\n                selectedQuestionNumber:action.payload\n    \n            }\n        case QuestionActionTypes.SELECTED_QUESTION_PREVIOUS:\n            return{\n                ...state,\n                selectedQuestion:state.questions[action.payload],\n                selectedQuestionNumber:action.payload\n            }\n        case QuestionActionTypes.SET_SELECTED_ANSWER:\n            var Questions=state.questions;\n            var question=Questions[state.selectedQuestionNumber];\n            question.selectedAnswer=action.payload;\n            question.marked=true;\n            Questions[state.selectedQuestionNumber]=question;\n            return{\n                ...state,\n                questions:Questions,\n                selectedQuestion:{...state.selectedQuestion,selectedAnswer:action.payload,marked:true},\n                \n            }\n        // case QuestionActionTypes.SET_RECENT_FETCHED_TIME:\n        //     return{\n        //         ...state,\n        //         recentFetchedTime:action.payload\n        //     }\n        default:\n            return state;\n        \n     }\n\n }\n \n export default questionReducer;"]},"metadata":{},"sourceType":"module"}