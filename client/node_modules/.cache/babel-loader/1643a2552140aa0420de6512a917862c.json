{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport './answer.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { getSelectedQuestionAnswers } from '../../redux/question/question.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RadioButtonsGroup = function ({\n  answers,\n  selectedAnswer\n}) {\n  _s();\n\n  const [value, setValue] = React.useState({\n    selectedAnswer\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    component: \"fieldset\",\n    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n      \"aria-label\": \"options\",\n      name: \"gender1\",\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"1\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 46\n        }, this),\n        label: answers[0].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"2\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 46\n        }, this),\n        label: answers[1].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"3\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 46\n        }, this),\n        label: answers[2].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"4\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 46\n        }, this),\n        label: answers[3].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RadioButtonsGroup, \"jp2n2E+gq7j4z38xE8nq+iHydZY=\");\n\n_c = RadioButtonsGroup;\nconst mapStateToProps = createStructuredSelector({\n  answers: getSelectedQuestionAnswers\n});\nexport default connect(mapStateToProps, null)(RadioButtonsGroup);\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioButtonsGroup\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answer.component.jsx"],"names":["React","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","createStructuredSelector","getSelectedQuestionAnswers","RadioButtonsGroup","answers","selectedAnswer","value","setValue","useState","handleChange","event","target","text","mapStateToProps","connect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,sBAAP;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,0BAAT,QAA2C,wCAA3C;;;AAGC,MAAMC,iBAAiB,GAAC,UAAU;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAV,EAAoC;AAAA;;AAC3D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAe;AAACH,IAAAA;AAAD,GAAf,CAA1B;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA,2BAEE,QAAC,UAAD;AAAY,oBAAW,SAAvB;AAAiC,MAAA,IAAI,EAAC,SAAtC;AAAgD,MAAA,KAAK,EAAEA,KAAvD;AAA8D,MAAA,QAAQ,EAAEG,YAAxE;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,GAAxB;AAA4B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAArC;AAAgD,QAAA,KAAK,EAAEL,OAAO,CAAC,CAAD,CAAP,CAAWQ;AAAlE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,GAAxB;AAA4B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAArC;AAAgD,QAAA,KAAK,EAAER,OAAO,CAAC,CAAD,CAAP,CAAWQ;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,GAAxB;AAA4B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAArC;AAAgD,QAAA,KAAK,EAAER,OAAO,CAAC,CAAD,CAAP,CAAWQ;AAAlE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,GAAxB;AAA4B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAArC;AAAgD,QAAA,KAAK,EAAER,OAAO,CAAC,CAAD,CAAP,CAAWQ;AAAlE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBA;;GAAMT,iB;;KAAAA,iB;AAqBP,MAAMU,eAAe,GAACZ,wBAAwB,CAAC;AAC7CG,EAAAA,OAAO,EAACF;AADqC,CAAD,CAA9C;AAMA,eAAeY,OAAO,CAACD,eAAD,EAAiB,IAAjB,CAAP,CAA8BV,iBAA9B,CAAf","sourcesContent":["import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport './answer.styles.scss';\n\nimport {createStructuredSelector} from 'reselect';\nimport { getSelectedQuestionAnswers } from '../../redux/question/question.selector';\n\n\n const RadioButtonsGroup=function ({answers,selectedAnswer}) {\n  const [value, setValue] = React.useState({selectedAnswer});\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      \n      <RadioGroup aria-label=\"options\" name=\"gender1\" value={value} onChange={handleChange}>\n        <FormControlLabel value=\"1\" control={<Radio />} label={answers[0].text}/>\n        <FormControlLabel value=\"2\" control={<Radio />} label={answers[1].text}/>\n        <FormControlLabel value=\"3\" control={<Radio />} label={answers[2].text} />\n        <FormControlLabel value=\"4\" control={<Radio />} label={answers[3].text} />\n        \n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nconst mapStateToProps=createStructuredSelector({\n  answers:getSelectedQuestionAnswers,\n  \n\n})\n\nexport default connect(mapStateToProps,null)(RadioButtonsGroup);"]},"metadata":{},"sourceType":"module"}