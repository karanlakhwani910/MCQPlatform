{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/question/question.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport \"./question.styles.scss\"; // import { colors } from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { getSelectedQuestion, getSelectedQuestionNumber } from \"../../redux/question/question.selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(3),\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      height: 90\n    }\n  },\n  media: {\n    height: 140,\n    width: 300,\n    margin: \"auto\",\n    marginBottom: 20,\n    marginTop: -25\n  }\n}));\n\nconst Question = function ({\n  question,\n  questionNumber\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"Controlled\"); // const handleChange = (event) => {\n  //   setValue(event.target.value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      style: {\n        justifyItems: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-multiline-flexible\",\n        label: `Question #${questionNumber + 1}`,\n        multiline: true,\n        rowsMax: 3 // value=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sha \"\n        ,\n        value: question.content // onChange={handleChange}\n        ,\n        InputProps: {\n          style: {\n            fontSize: 25\n          },\n          readOnly: true,\n          disableUnderline: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"VKmL1OkFKG0J3md4JLoF2/KVPxI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Question;\nconst mapStateToProps = createStructuredSelector({\n  question: getSelectedQuestion,\n  questionNumber: getSelectedQuestionNumber\n});\nexport default connect(mapStateToProps, null)(Question);\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/question/question.component.jsx"],"names":["React","TextField","makeStyles","Typography","CardMedia","connect","createStructuredSelector","getSelectedQuestion","getSelectedQuestionNumber","useStyles","theme","root","margin","spacing","width","display","flexWrap","height","media","marginBottom","marginTop","Question","question","questionNumber","classes","value","setValue","useState","justifyItems","content","style","fontSize","readOnly","disableUnderline","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,wBAAP,C,CACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,mBAAT,EAA6BC,yBAA7B,QAA8D,wCAA9D;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE,MAFe;AAGtBC,MAAAA,OAAO,EAAE,MAHa;AAItBC,MAAAA,QAAQ,EAAE,MAJY;AAKtBC,MAAAA,MAAM,EAAE;AALc;AADpB,GADiC;AAUvCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,MAAM,EAAE,GADH;AAELH,IAAAA,KAAK,EAAE,GAFF;AAGLF,IAAAA,MAAM,EAAE,MAHH;AAILO,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,SAAS,EAAE,CAAC;AALP;AAVgC,CAAZ,CAAD,CAA5B;;AAmBA,MAAMC,QAAQ,GAAG,UAAU;AAAEC,EAAAA,QAAF;AAAWC,EAAAA;AAAX,CAAV,EAAsC;AAAA;;AACrD,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoB1B,KAAK,CAAC2B,QAAN,CAAe,YAAf,CAA1B,CAFqD,CAIrD;AACA;AACA;;AACA,sBACE;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACb,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEiB,QAAAA,YAAY,EAAE;AAAhB,OAAjC;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,6BADL;AAEE,QAAA,KAAK,EAAG,aAAYL,cAAc,GAAC,CAAE,EAFvC;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,OAAO,EAAE,CAJX,CAKE;AALF;AAME,QAAA,KAAK,EAAED,QAAQ,CAACO,OANlB,CAOE;AAPF;AAQE,QAAA,UAAU,EAAE;AACVC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADG;AAEVC,UAAAA,QAAQ,EAAE,IAFA;AAGVC,UAAAA,gBAAgB,EAAE;AAHR;AARd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAjCD;;GAAMZ,Q;UACYZ,S;;;KADZY,Q;AAmCN,MAAMa,eAAe,GAAG5B,wBAAwB,CAAC;AAC/CgB,EAAAA,QAAQ,EAAEf,mBADqC;AAE/CgB,EAAAA,cAAc,EAAEf;AAF+B,CAAD,CAAhD;AAKA,eAAeH,OAAO,CAAC6B,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,QAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport \"./question.styles.scss\";\n// import { colors } from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { getSelectedQuestion,getSelectedQuestionNumber } from \"../../redux/question/question.selector\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(3),\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      height: 90,\n    },\n  },\n  media: {\n    height: 140,\n    width: 300,\n    margin: \"auto\",\n    marginBottom: 20,\n    marginTop: -25,\n  },\n}));\n\nconst Question = function ({ question,questionNumber}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"Controlled\");\n\n  // const handleChange = (event) => {\n  //   setValue(event.target.value);\n  // };\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div className=\"question\" style={{ justifyItems: \"left\" }}>\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label={`Question #${questionNumber+1}`}\n          multiline\n          rowsMax={3}\n          // value=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna  sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sha \"\n          value={question.content}\n          // onChange={handleChange}\n          InputProps={{\n            style: { fontSize: 25 },\n            readOnly: true,\n            disableUnderline: true,\n          }}\n        />\n        {/* Uncomment card media to bring image  */}\n        {/* <CardMedia\n          className={classes.media}\n          image=\"https://source.unsplash.com/random\"\n          title=\"Contemplative Reptile\"\n        /> */}\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  question: getSelectedQuestion,\n  questionNumber: getSelectedQuestionNumber\n});\n\nexport default connect(mapStateToProps, null)(Question);\n"]},"metadata":{},"sourceType":"module"}