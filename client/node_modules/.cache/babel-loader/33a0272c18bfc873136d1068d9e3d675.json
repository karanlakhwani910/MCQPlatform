{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user.reducer';\nimport questionReducer from './question/question.reducer';\nimport generalReducer from './general/general.reducer';\nimport circuitronQuestionReducer from './circuitron-question/question.reducer';\nimport c2cQuestionReducer from './c2c-question/question.reducer';\nimport couchPotatoQuestionReducer from './couchPotato-question/question.reducer';\nimport xenatusQuestionReducer from './xenatus-question/question.reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['user', 'circuitronQuestion', 'c2cQuestion', 'xenatusQuestion', 'couchPotatoQuestion']\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  question: questionReducer,\n  circuitronQuestion: circuitronQuestionReducer,\n  c2cQuestion: c2cQuestionReducer,\n  xenatusQuestion: xenatusQuestionReducer,\n  couchPotatoQuestion: couchPotatoQuestionReducer,\n  general: generalReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/client/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","questionReducer","generalReducer","circuitronQuestionReducer","c2cQuestionReducer","couchPotatoQuestionReducer","xenatusQuestionReducer","persistConfig","key","whitelist","rootReducer","user","question","circuitronQuestion","c2cQuestion","xenatusQuestion","couchPotatoQuestion","general"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA4B,eAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,yBAAP,MAAsC,wCAAtC;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,0BAAP,MAAuC,yCAAvC;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AAEA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,GAAG,EAAC,MADY;AAEhBT,EAAAA,OAFgB;AAGhBU,EAAAA,SAAS,EAAC,CAAC,MAAD,EAAQ,oBAAR,EAA6B,aAA7B,EAA2C,iBAA3C,EAA6D,qBAA7D;AAHM,CAApB;AAMA,MAAMC,WAAW,GAACb,eAAe,CAAC;AAC9Bc,EAAAA,IAAI,EAACX,WADyB;AAE9BY,EAAAA,QAAQ,EAACX,eAFqB;AAG9BY,EAAAA,kBAAkB,EAACV,yBAHW;AAI9BW,EAAAA,WAAW,EAACV,kBAJkB;AAK9BW,EAAAA,eAAe,EAACT,sBALc;AAM9BU,EAAAA,mBAAmB,EAACX,0BANU;AAO9BY,EAAAA,OAAO,EAACf;AAPsB,CAAD,CAAjC;AAUA,eAAeJ,cAAc,CAACS,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import {combineReducers} from 'redux';\nimport {persistReducer} from'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n\nimport userReducer from './user/user.reducer';\nimport questionReducer from './question/question.reducer';\nimport generalReducer from './general/general.reducer';\nimport circuitronQuestionReducer from './circuitron-question/question.reducer';\nimport c2cQuestionReducer from './c2c-question/question.reducer';\nimport couchPotatoQuestionReducer from './couchPotato-question/question.reducer';\nimport xenatusQuestionReducer from './xenatus-question/question.reducer';\n\nconst persistConfig={\n    key:'root',\n    storage,\n    whitelist:['user','circuitronQuestion','c2cQuestion','xenatusQuestion','couchPotatoQuestion']\n}\n\nconst rootReducer=combineReducers({\n    user:userReducer,\n    question:questionReducer,\n    circuitronQuestion:circuitronQuestionReducer,\n    c2cQuestion:c2cQuestionReducer,\n    xenatusQuestion:xenatusQuestionReducer,\n    couchPotatoQuestion:couchPotatoQuestionReducer,\n    general:generalReducer\n});\n\nexport default persistReducer(persistConfig ,rootReducer)"]},"metadata":{},"sourceType":"module"}