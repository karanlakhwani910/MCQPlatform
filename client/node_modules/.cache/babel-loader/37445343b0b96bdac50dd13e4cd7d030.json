{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./user/user.reducer\";\nimport questionReducer from \"./question/question.reducer\";\nimport generalReducer from \"./general/general.reducer\";\nimport circuitronQuestionReducer from \"./circuitron-question/question.reducer\";\nimport c2cQuestionReducer from \"./c2c-question/question.reducer\";\nimport couchPotatoQuestionReducer from \"./couchPotato-question/question.reducer\";\nimport xenatusQuestionReducer from \"./xenatus-question/question.reducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\", \"circuitronQuestion\", \"c2cQuestion\", \"xenatusQuestion\", \"couchPotatoQuestion\"]\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  question: questionReducer,\n  circuitronQuestion: circuitronQuestionReducer,\n  c2cQuestion: c2cQuestionReducer,\n  xenatusQuestion: xenatusQuestionReducer,\n  couchPotatoQuestion: couchPotatoQuestionReducer,\n  general: generalReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/client/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","questionReducer","generalReducer","circuitronQuestionReducer","c2cQuestionReducer","couchPotatoQuestionReducer","xenatusQuestionReducer","persistConfig","key","whitelist","rootReducer","user","question","circuitronQuestion","c2cQuestion","xenatusQuestion","couchPotatoQuestion","general"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,yBAAP,MAAsC,wCAAtC;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,0BAAP,MAAuC,yCAAvC;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBT,EAAAA,OAFoB;AAGpBU,EAAAA,SAAS,EAAE,CACT,MADS,EAET,oBAFS,EAGT,aAHS,EAIT,iBAJS,EAKT,qBALS;AAHS,CAAtB;AAYA,MAAMC,WAAW,GAAGb,eAAe,CAAC;AAClCc,EAAAA,IAAI,EAAEX,WAD4B;AAElCY,EAAAA,QAAQ,EAAEX,eAFwB;AAGlCY,EAAAA,kBAAkB,EAAEV,yBAHc;AAIlCW,EAAAA,WAAW,EAAEV,kBAJqB;AAKlCW,EAAAA,eAAe,EAAET,sBALiB;AAMlCU,EAAAA,mBAAmB,EAAEX,0BANa;AAOlCY,EAAAA,OAAO,EAAEf;AAPyB,CAAD,CAAnC;AAUA,eAAeJ,cAAc,CAACS,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from \"./user/user.reducer\";\nimport questionReducer from \"./question/question.reducer\";\nimport generalReducer from \"./general/general.reducer\";\nimport circuitronQuestionReducer from \"./circuitron-question/question.reducer\";\nimport c2cQuestionReducer from \"./c2c-question/question.reducer\";\nimport couchPotatoQuestionReducer from \"./couchPotato-question/question.reducer\";\nimport xenatusQuestionReducer from \"./xenatus-question/question.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\n    \"user\",\n    \"circuitronQuestion\",\n    \"c2cQuestion\",\n    \"xenatusQuestion\",\n    \"couchPotatoQuestion\",\n  ],\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  question: questionReducer,\n  circuitronQuestion: circuitronQuestionReducer,\n  c2cQuestion: c2cQuestionReducer,\n  xenatusQuestion: xenatusQuestionReducer,\n  couchPotatoQuestion: couchPotatoQuestionReducer,\n  general: generalReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}