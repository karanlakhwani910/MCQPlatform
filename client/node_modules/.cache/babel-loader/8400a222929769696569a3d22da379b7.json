{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/timer/timer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./timer.styles.scss\"; // import { Typography } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const [time, setTime] = useState(60 * 60);\n  const [hour, setHour] = useState(\"00\");\n  const [min, setMin] = useState(\"00\");\n  const [sec, setSec] = useState(\"00\");\n  let interval = useRef();\n\n  const settimer = () => {\n    interval = setInterval(() => {\n      setTime(time - 1);\n      var h = Math.floor(time / (60 * 60));\n      var m = Math.floor(time % (60 * 60) / 60);\n      var s = time % 60;\n\n      if (time > 0) {\n        if (h < 10 || m < 10 || s < 10) {\n          h = \"0\" + h.toString(); // m = \"0\" + m.toString();\n          // s = \"0\" + s.toString();\n        }\n\n        setHour(h);\n        setMin(m);\n        setSec(s);\n      } else {// clearInterval(interval.current);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    settimer();\n    return () => {// clearInterval(interval.current);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-xs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-lg-none  col-sm-9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-sm-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"timer\",\n              children: [hour, \":\", min, \":\", sec]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"6zt8OWgpPnIg7GItquXEQ0ZtNFA=\");\n\n_c = Timer;\nconst Wrapper = styled.section`\n  .row {\n    display: inline-block;\n  }\n  .container-xs {\n    margin-top: -8%;\n  }\n  @media only screen and (min-width: 600px) {\n    .container-xs {\n      margin-top: -15%;\n      margin-right: -80%;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    .timer {\n      padding-top: -5%;\n    }\n  }\n`;\n_c2 = Wrapper;\nexport default Timer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/timer/timer.component.jsx"],"names":["React","useState","useEffect","useRef","styled","Timer","time","setTime","hour","setHour","min","setMin","sec","setSec","interval","settimer","setInterval","h","Math","floor","m","s","toString","Wrapper","section"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,qBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAK,EAAN,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEA,MAAIa,QAAQ,GAAGX,MAAM,EAArB;;AAEA,QAAMY,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAM;AAC3BT,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACA,UAAIW,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AACA,UAAIc,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAYb,IAAI,IAAI,KAAK,EAAT,CAAL,GAAqB,EAAhC,CAAR;AACA,UAAIe,CAAC,GAAGf,IAAI,GAAG,EAAf;;AAEA,UAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,YAAIW,CAAC,GAAG,EAAJ,IAAUG,CAAC,GAAG,EAAd,IAAoBC,CAAC,GAAG,EAA5B,EAAgC;AAC9BJ,UAAAA,CAAC,GAAG,MAAMA,CAAC,CAACK,QAAF,EAAV,CAD8B,CAE9B;AACA;AACD;;AACDb,QAAAA,OAAO,CAACQ,CAAD,CAAP;AACAN,QAAAA,MAAM,CAACS,CAAD,CAAN;AACAP,QAAAA,MAAM,CAACQ,CAAD,CAAN;AACD,OATD,MASO,CACL;AACD;AACF,KAlBqB,EAkBnB,IAlBmB,CAAtB;AAmBD,GApBD;;AAsBAnB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ;AACR,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GALQ,CAAT;AAMA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,yBACGP,IADH,OACUE,GADV,OACgBE,GADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApDD;;GAAMP,K;;KAAAA,K;AAqDN,MAAMkB,OAAO,GAAGnB,MAAM,CAACoB,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,O;AAmBN,eAAelB,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./timer.styles.scss\";\n// import { Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst Timer = () => {\n  const [time, setTime] = useState(60 * 60);\n  const [hour, setHour] = useState(\"00\");\n  const [min, setMin] = useState(\"00\");\n  const [sec, setSec] = useState(\"00\");\n\n  let interval = useRef();\n\n  const settimer = () => {\n    interval = setInterval(() => {\n      setTime(time - 1);\n      var h = Math.floor(time / (60 * 60));\n      var m = Math.floor((time % (60 * 60)) / 60);\n      var s = time % 60;\n\n      if (time > 0) {\n        if (h < 10 || m < 10 || s < 10) {\n          h = \"0\" + h.toString();\n          // m = \"0\" + m.toString();\n          // s = \"0\" + s.toString();\n        }\n        setHour(h);\n        setMin(m);\n        setSec(s);\n      } else {\n        // clearInterval(interval.current);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    settimer();\n    return () => {\n      // clearInterval(interval.current);\n    };\n  });\n  return (\n    <Wrapper>\n      <div>\n        <div className=\"container-xs\">\n          <div className=\"row\">\n            <div className=\"d-lg-none  col-sm-9\"></div>\n            <div className=\"col-lg-2 col-sm-5\">\n              <h1 className=\"timer\">\n                {hour}:{min}:{sec}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.section`\n  .row {\n    display: inline-block;\n  }\n  .container-xs {\n    margin-top: -8%;\n  }\n  @media only screen and (min-width: 600px) {\n    .container-xs {\n      margin-top: -15%;\n      margin-right: -80%;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    .timer {\n      padding-top: -5%;\n    }\n  }\n`;\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}