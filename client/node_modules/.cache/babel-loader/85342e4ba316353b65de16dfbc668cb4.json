{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answersnaphunt.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport \"./answer.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from \"styled-components\";\nimport { getSelectedQuestionAnswers, getSelectedQuestion } from \"../../redux/question/question.selector\";\nimport { setSelectedAnswer } from \"../../redux/question/question.actions\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledRadio = styled(Radio)`\n  color: ${cyan[400]};\n  &.Mui-checked {\n    color: ${cyan[600]};\n  }\n`;\n\nconst RadioButtonsGroup = function ({\n  answers,\n  selectedQuestion,\n  setSelectedAnswer\n}) {\n  _s();\n\n  const selectedAnswer = selectedQuestion.selectedAnswer;\n  const [value, setValue] = React.useState({\n    selectedAnswer\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setSelectedAnswer(event.target.value);\n  }; //{answers[0].text}\n  //{answers[1].text}\n  //{answers[2].text}\n  //{answers[3].text}\n\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"real-file\",\n      hidden: \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"custom-button\",\n      children: \"CHOOSE A FILE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"custom-text\",\n      children: \"No file chosen, yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RadioButtonsGroup, \"+ocmgouxe6jqg5TaCWpL3ywck2Q=\");\n\n_c = RadioButtonsGroup;\nconst mapStateToProps = createStructuredSelector({\n  answers: getSelectedQuestionAnswers,\n  selectedQuestion: getSelectedQuestion\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedAnswer: num => dispatch(setSelectedAnswer(num))\n});\n\nconst Wrapper = styled.section`\n  .MuiGrid-spacing-xs-1 > .MuiGrid-item {\n    padding: 4px;\n    // margin-left: 40px;\n    margin: auto;\n  }\n  @media only screen and (min-width: 600px) {\n    .MuiFormControlLabel-label {\n      font-size: 20px;\n    }\n  }\n`;\n_c2 = Wrapper;\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RadioButtonsGroup\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answersnaphunt.component.jsx"],"names":["React","Radio","RadioGroup","FormControlLabel","FormControl","Button","FormLabel","connect","createStructuredSelector","styled","getSelectedQuestionAnswers","getSelectedQuestion","setSelectedAnswer","cyan","StyledRadio","RadioButtonsGroup","answers","selectedQuestion","selectedAnswer","value","setValue","useState","handleChange","event","target","mapStateToProps","mapDispatchToProps","dispatch","num","Wrapper","section"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,sBAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,0BADF,EAEEC,mBAFF,QAGO,wCAHP;AAIA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACR,KAAD,CAAQ;AAClC,WAAWY,IAAI,CAAC,GAAD,CAAM;AACrB;AACA,aAAaA,IAAI,CAAC,GAAD,CAAM;AACvB;AACA,CALA;;AAMA,MAAME,iBAAiB,GAAG,UAAU;AAClCC,EAAAA,OADkC;AAElCC,EAAAA,gBAFkC;AAGlCL,EAAAA;AAHkC,CAAV,EAIvB;AAAA;;AACD,QAAMM,cAAc,GAAGD,gBAAgB,CAACC,cAAxC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,KAAK,CAACqB,QAAN,CAAe;AAAEH,IAAAA;AAAF,GAAf,CAA1B;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAR;AACAP,IAAAA,iBAAiB,CAACW,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAjB;AACD,GAHD,CAJC,CAQD;AACA;AACA;AACA;;;AACA,sBACE,QAAC,OAAD;AAAA,4BAmBE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAuBE;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA3CD;;GAAMJ,iB;;KAAAA,iB;AA6CN,MAAMU,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CQ,EAAAA,OAAO,EAAEN,0BADsC;AAE/CO,EAAAA,gBAAgB,EAAEN;AAF6B,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,iBAAiB,EAAGgB,GAAD,IAASD,QAAQ,CAACf,iBAAiB,CAACgB,GAAD,CAAlB;AADI,CAAf,CAA3B;;AAGA,MAAMC,OAAO,GAAGpB,MAAM,CAACqB,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,O;AAYN,eAAetB,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,iBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport \"./answer.styles.scss\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from \"styled-components\";\nimport {\n  getSelectedQuestionAnswers,\n  getSelectedQuestion,\n} from \"../../redux/question/question.selector\";\nimport { setSelectedAnswer } from \"../../redux/question/question.actions\";\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst StyledRadio = styled(Radio)`\n  color: ${cyan[400]};\n  &.Mui-checked {\n    color: ${cyan[600]};\n  }\n`;\nconst RadioButtonsGroup = function ({\n  answers,\n  selectedQuestion,\n  setSelectedAnswer,\n}) {\n  const selectedAnswer = selectedQuestion.selectedAnswer;\n  const [value, setValue] = React.useState({ selectedAnswer });\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setSelectedAnswer(event.target.value);\n  };\n  //{answers[0].text}\n  //{answers[1].text}\n  //{answers[2].text}\n  //{answers[3].text}\n  return (\n    <Wrapper>\n      {/* <input\n        accept=\"image/*\"\n        //className={classes.input}\n        style={{ display: \"none\" }}\n        id=\"raised-button-file\"\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"raised-button-file\">\n        <Button\n          variant=\"raised\"\n          component=\"span\"\n          color=\"secondary\"\n          className=\"buttonStyle buttonStyleSnapHunt\"\n        >\n          Upload\n        </Button>\n      </label> */}\n      <input type=\"file\" id=\"real-file\" hidden=\"hidden\" />\n      <button type=\"button\" id=\"custom-button\">\n        CHOOSE A FILE\n      </button>\n      <span id=\"custom-text\">No file chosen, yet.</span>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  answers: getSelectedQuestionAnswers,\n  selectedQuestion: getSelectedQuestion,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedAnswer: (num) => dispatch(setSelectedAnswer(num)),\n});\nconst Wrapper = styled.section`\n  .MuiGrid-spacing-xs-1 > .MuiGrid-item {\n    padding: 4px;\n    // margin-left: 40px;\n    margin: auto;\n  }\n  @media only screen and (min-width: 600px) {\n    .MuiFormControlLabel-label {\n      font-size: 20px;\n    }\n  }\n`;\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\n"]},"metadata":{},"sourceType":"module"}