{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/client/src/components/answer-xenatus/answer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport \"./answer.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from \"styled-components\";\nimport { getSelectedQuestionAnswersXenatus, getSelectedQuestionXenatus } from \"../../redux/xenatus-question/question.selector\";\nimport { setSelectedAnswerXenatus } from \"../../redux/xenatus-question/question.actions\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledRadio = styled(Radio)`\n  color: ${cyan[400]};\n  &.Mui-checked {\n    color: ${cyan[600]};\n  }\n`;\n_c = StyledRadio;\n\nconst RadioButtonsGroup = function ({\n  answersXenatus,\n  selectedQuestionXenatus,\n  setSelectedAnswerXenatus\n}) {\n  _s();\n\n  const selectedAnswer = selectedQuestionXenatus.selectedAnswer;\n  const [value, setValue] = React.useState(selectedAnswer);\n  React.useEffect(() => {\n    setValue(selectedAnswer);\n  }, [selectedAnswer]);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setSelectedAnswerXenatus(event.target.value);\n  }; //{answers[0].text}\n  //{answers[1].text}\n  //{answers[2].text}\n  //{answers[3].text}\n\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: \"styling vertical-center-row\",\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"options\",\n        name: \"gender1\",\n        value: value,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"0\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this),\n          label: answersXenatus[0] // label=\"Random Option Opp tion oOO ppp Random Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp\"\n          ,\n          className: \"FormControlLabelStyling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"1\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 22\n          }, this),\n          label: answersXenatus[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"2\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 22\n          }, this),\n          label: answersXenatus[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"3\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 22\n          }, this),\n          label: answersXenatus[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RadioButtonsGroup, \"flGVnLahn5teyqtsbJi7iCLZzEU=\");\n\n_c2 = RadioButtonsGroup;\nconst mapStateToProps = createStructuredSelector({\n  answersXenatus: getSelectedQuestionAnswersXenatus,\n  selectedQuestionXenatus: getSelectedQuestionXenatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedAnswerXenatus: num => dispatch(setSelectedAnswerXenatus(num))\n});\n\nconst Wrapper = styled.section`\n  @media only screen and (min-width: 600px) {\n    .MuiFormControlLabel-label {\n      font-size: 20px;\n      font-family: Fenix;\n    }\n  }\n  .MuiRadio-root {\n    color: #ffffff80;\n  }\n`;\n_c3 = Wrapper;\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledRadio\");\n$RefreshReg$(_c2, \"RadioButtonsGroup\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/client/src/components/answer-xenatus/answer.component.jsx"],"names":["React","Radio","RadioGroup","FormControlLabel","FormControl","Button","FormLabel","connect","createStructuredSelector","styled","getSelectedQuestionAnswersXenatus","getSelectedQuestionXenatus","setSelectedAnswerXenatus","cyan","StyledRadio","RadioButtonsGroup","answersXenatus","selectedQuestionXenatus","selectedAnswer","value","setValue","useState","useEffect","handleChange","event","target","mapStateToProps","mapDispatchToProps","dispatch","num","Wrapper","section"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport \"./answer.styles.scss\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from \"styled-components\";\nimport {\n  getSelectedQuestionAnswersXenatus,\n  getSelectedQuestionXenatus,\n} from \"../../redux/xenatus-question/question.selector\";\nimport { setSelectedAnswerXenatus } from \"../../redux/xenatus-question/question.actions\";\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst StyledRadio = styled(Radio)`\n  color: ${cyan[400]};\n  &.Mui-checked {\n    color: ${cyan[600]};\n  }\n`;\nconst RadioButtonsGroup = function ({\n  answersXenatus,\n  selectedQuestionXenatus,\n  setSelectedAnswerXenatus,\n}) {\n  const selectedAnswer = selectedQuestionXenatus.selectedAnswer;\n  const [value, setValue] = React.useState(selectedAnswer);\n\n  React.useEffect(() => {\n    setValue(selectedAnswer);\n  }, [selectedAnswer]);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setSelectedAnswerXenatus(event.target.value);\n  };\n  //{answers[0].text}\n  //{answers[1].text}\n  //{answers[2].text}\n  //{answers[3].text}\n  return (\n    <Wrapper>\n      <FormControl component=\"fieldset\" className=\"styling vertical-center-row\">\n        <RadioGroup\n          aria-label=\"options\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"0\"\n            control={<StyledRadio />}\n            label={answersXenatus[0]}\n            // label=\"Random Option Opp tion oOO ppp Random Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp Option Opp tion oOO ppp\"\n            className=\"FormControlLabelStyling\"\n          />\n          <FormControlLabel\n            value=\"1\"\n            control={<StyledRadio />}\n            label={answersXenatus[1]}\n          />\n          <FormControlLabel\n            value=\"2\"\n            control={<StyledRadio />}\n            label={answersXenatus[2]}\n          />\n          <FormControlLabel\n            value=\"3\"\n            control={<StyledRadio />}\n            label={answersXenatus[3]}\n          />\n        </RadioGroup>\n      </FormControl>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  answersXenatus: getSelectedQuestionAnswersXenatus,\n  selectedQuestionXenatus: getSelectedQuestionXenatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedAnswerXenatus: (num) => dispatch(setSelectedAnswerXenatus(num)),\n});\nconst Wrapper = styled.section`\n  @media only screen and (min-width: 600px) {\n    .MuiFormControlLabel-label {\n      font-size: 20px;\n      font-family: Fenix;\n    }\n  }\n  .MuiRadio-root {\n    color: #ffffff80;\n  }\n`;\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\n"]},"metadata":{},"sourceType":"module"}