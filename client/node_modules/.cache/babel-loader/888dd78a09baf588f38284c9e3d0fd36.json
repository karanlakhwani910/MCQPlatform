{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/pages/quiz-page/quiz-page.component.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setFetchedQuestionsToState, selectedQuestionNext, selectedQuestionPrevious } from '../../redux/question/question.actions';\nimport { getSelectedQuestion, getSelectedQuestionNumber } from '../../redux/question/question.selector';\nimport \"./quiz-page.styles.scss\";\nimport GridComponent from \"../../components/grid/grid.component\";\nimport McqComponent from \"../../components/mcq/mcq.component\";\nimport TimerComponent from \"../../components/timer/timer.component\"; // <<<<<<< HEAD\n\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\"; //import Button from \"../../components/button/button.component\";\n// =======\n\nimport Button from \"../../components/button/button.component\"; // >>>>>>> 466f559c4f27bcecf7c0a072c9f8fe35d67faf1c\n\nimport //Typography,\n//AppBar,\n// Card,\n// CardActions,\n// CardContent,\n// CardMedia,\n//CssBaseline,\n// Grid,\n//Toolbar,\n// Container,\n//ButtonGroup,\n\"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    axios.post(\"http://localhost:3001/fetchQuestions\").then(res => {\n      console.log(res);\n      this.setState(res.data);\n      this.props.setFetchedQuestionsToState(res.data);\n      console.log(\"action initialised\");\n    }).catch(function (error) {\n      console.log(\"an error has occurred : \", error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-5 col-sm-12 div1\",\n            children: /*#__PURE__*/_jsxDEV(TemporaryDrawer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9 col-md-7 col-sm-1\",\n            children: [/*#__PURE__*/_jsxDEV(TimerComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(McqComponent, {\n              question: this.props.selectedQuestion.content,\n              answers: this.props.selectedQuestion.answers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-row\",\n                text: \"Previous\",\n                type: \"btn btn-primary\",\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-row\",\n                text: \"Next\",\n                type: \"btn btn-primary\",\n                onClick: () => console.log(\"hi\"),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-row\",\n                text: \"Submit\",\n                type: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setFetchedQuestionsToState: questions => dispatch(setFetchedQuestionsToState(questions)),\n  selectedQuestionNext: num => dispatch(selectedQuestionNext(num)),\n  selectedQuestionPrevious: num => dispatch(selectedQuestionPrevious(num))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  selectedQuestion: getSelectedQuestion,\n  selecetedQuestionNumber: getSelectedQuestionNumber\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizPage);","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/pages/quiz-page/quiz-page.component.jsx"],"names":["React","Component","axios","connect","createStructuredSelector","setFetchedQuestionsToState","selectedQuestionNext","selectedQuestionPrevious","getSelectedQuestion","getSelectedQuestionNumber","GridComponent","McqComponent","TimerComponent","TemporaryDrawer","Button","QuizPage","constructor","props","state","componentDidMount","post","then","res","console","log","setState","data","catch","error","render","selectedQuestion","content","answers","mapDispatchToProps","dispatch","questions","num","mapStateToProps","selecetedQuestionNumber"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {setFetchedQuestionsToState,selectedQuestionNext,selectedQuestionPrevious} from '../../redux/question/question.actions';\nimport { getSelectedQuestion,getSelectedQuestionNumber } from '../../redux/question/question.selector';\n\nimport \"./quiz-page.styles.scss\";\n\nimport GridComponent from \"../../components/grid/grid.component\";\nimport McqComponent from \"../../components/mcq/mcq.component\";\nimport TimerComponent from \"../../components/timer/timer.component\";\n// <<<<<<< HEAD\nimport TemporaryDrawer from \"../../components/drawer/TemporaryDrawer\";\n//import Button from \"../../components/button/button.component\";\n// =======\nimport Button from \"../../components/button/button.component\";\n// >>>>>>> 466f559c4f27bcecf7c0a072c9f8fe35d67faf1c\nimport {\n  //Typography,\n  //AppBar,\n  // Card,\n  // CardActions,\n  // CardContent,\n  // CardMedia,\n  //CssBaseline,\n  // Grid,\n  //Toolbar,\n  // Container,\n  //ButtonGroup,\n} from \"@material-ui/core\";\n\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    axios\n      .post(\"http://localhost:3001/fetchQuestions\")\n      .then((res) => {\n        console.log(res);\n        this.setState(res.data);\n        this.props.setFetchedQuestionsToState(res.data);\n        console.log(\"action initialised\");\n      })\n      .catch(function (error) {\n        console.log(\"an error has occurred : \", error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid \">\n        <div className=\"overlay\">\n          <div className=\"row\">\n            {/* Instructions */}\n            <div className=\"col-lg-3 col-md-5 col-sm-12 div1\">\n              {/* <GridComponent /> */}\n              <TemporaryDrawer />\n            </div>\n\n          <div className=\"col-lg-9 col-md-7 col-sm-1\">\n            <TimerComponent />\n            <McqComponent question={this.props.selectedQuestion.content} answers={this.props.selectedQuestion.answers}/>\n            <div className=\"row\">\n              <Button\n                className=\"button-row\"\n                text=\"Previous\"\n                type=\"btn btn-primary\"\n              >Previous</Button>\n              <Button\n                className=\"button-row\"\n                text=\"Next\"\n                type=\"btn btn-primary\"\n                onClick={()=>console.log(\"hi\")}\n              >Next</Button>\n              <Button\n                className=\"button-row\"\n                text=\"Submit\"\n                type=\"btn btn-primary\"\n              >Submit</Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFetchedQuestionsToState: (questions) =>\n    dispatch(setFetchedQuestionsToState(questions)),\n  selectedQuestionNext:(num)=>\n    dispatch(selectedQuestionNext(num)),\n  selectedQuestionPrevious:(num)=>\n    dispatch(selectedQuestionPrevious(num))\n  \n});\n\nconst mapStateToProps=createStructuredSelector({\n    selectedQuestion:getSelectedQuestion,\n    selecetedQuestionNumber:getSelectedQuestionNumber\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizPage);\n"]},"metadata":{},"sourceType":"module"}