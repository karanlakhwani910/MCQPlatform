{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './answer.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Answer({\n  answer\n}) {\n  _s();\n\n  const [state, setState] = React.useState({\n    checked: false\n  });\n\n  const handleCheckboxChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const onFocus = () => {\n    const inputBoxes = document.querySelectorAll('.answer');\n\n    for (var i = 0; i < inputBoxes.length; i++) {\n      inputBoxes[i].style.border = 'none';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox-answer\",\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: \"checkbox\",\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checked,\n        onChange: handleCheckboxChange,\n        name: \"checked\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"answer\",\n      value: answer,\n      readOnly: true,\n      onFocus: onFocus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Answer, \"3vqtTQoID6xN1hs3sqJPnZ67a/8=\");\n\n_c = Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answer.component.jsx"],"names":["React","FormControlLabel","Checkbox","Answer","answer","state","setState","useState","checked","handleCheckboxChange","event","target","name","onFocus","inputBoxes","document","querySelectorAll","i","length","style","border"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,OAAO,sBAAP;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA0B;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAE;AAD8B,GAAf,CAA1B;;AAIA,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtCJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaH;AAA9C,KAAD,CAAR;AACD,GAFD;;AAKA,QAAMK,OAAO,GAAG,MAAM;AACpB,UAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,CAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCH,MAAAA,UAAU,CAACG,CAAD,CAAV,CAAcE,KAAd,CAAoBC,MAApB,GAA6B,MAA7B;AACH;AACF,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAC,UAA5B;AACE,MAAA,OAAO,eACL,QAAC,QAAD;AACE,QAAA,OAAO,EAAEf,KAAK,CAACG,OADjB;AAEE,QAAA,QAAQ,EAAEC,oBAFZ;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,QAA7B;AAAsC,MAAA,KAAK,EAAEL,MAA7C;AAAsD,MAAA,QAAQ,MAA9D;AAA+D,MAAA,OAAO,EAAES;AAAxE;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBD;;GAlCuBV,M;;KAAAA,M","sourcesContent":["import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nimport './answer.styles.scss';\n\nexport default function Answer({answer}) {\n  const [state, setState] = React.useState({\n    checked: false\n  });\n\n  const handleCheckboxChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n\n  const onFocus = () => {\n    const inputBoxes = document.querySelectorAll('.answer')\n    for (var i = 0; i < inputBoxes.length; i++) {\n        inputBoxes[i].style.border = 'none'\n    }    \n  }\n  return (\n      <div className='checkbox-answer'>\n        <FormControlLabel className='checkbox'\n          control={\n            <Checkbox\n              checked={state.checked}\n              onChange={handleCheckboxChange}\n              name=\"checked\"\n              color=\"primary\"\n            />\n          }\n        />\n        <input type='text' className='answer' value={answer}  readOnly onFocus={onFocus}/>\n        \n      </div>\n\n\n  );\n}"]},"metadata":{},"sourceType":"module"}