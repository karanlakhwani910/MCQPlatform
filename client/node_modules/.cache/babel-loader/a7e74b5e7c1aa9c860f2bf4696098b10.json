{"ast":null,"code":"import { QuestionActionTypes } from './question.types';\nexport const setFetchedQuestionsToStateCircuitron = questions => ({\n  type: QuestionActionTypes.SET_FETCHED_QUESTIONS_TO_STATE_CIRCUITRON,\n  payload: questions\n});\nexport const setSelectedQuestionCircuitron = num => ({\n  type: QuestionActionTypes.SET_SELECTED_QUESTION_CIRCUITRON,\n  payload: num - 1\n});\nexport const setSelectedAnswerCircuitron = num => ({\n  type: QuestionActionTypes.SET_SELECTED_ANSWER_CIRCUITRON,\n  payload: num\n});\nexport const selectedQuestionNextCircuitron = num => ({\n  type: QuestionActionTypes.SELECTED_QUESTION_NEXT_CIRCUITRON,\n  payload: num + 1\n});\nexport const selectedQuestionPreviousCircuitron = num => ({\n  type: QuestionActionTypes.SELECTED_QUESTION_PREVIOUS_CIRCUITRON,\n  payload: num - 1\n}); // export const setRecentFetchedTime=time=>({\n//     type:QuestionActionTypes.SET_RECENT_FETCHED_TIME,\n//     payload:time\n// })","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/client/src/redux/circuitron-question/question.actions.js"],"names":["QuestionActionTypes","setFetchedQuestionsToStateCircuitron","questions","type","SET_FETCHED_QUESTIONS_TO_STATE_CIRCUITRON","payload","setSelectedQuestionCircuitron","num","SET_SELECTED_QUESTION_CIRCUITRON","setSelectedAnswerCircuitron","SET_SELECTED_ANSWER_CIRCUITRON","selectedQuestionNextCircuitron","SELECTED_QUESTION_NEXT_CIRCUITRON","selectedQuestionPreviousCircuitron","SELECTED_QUESTION_PREVIOUS_CIRCUITRON"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,kBAAlC;AAEA,OAAO,MAAMC,oCAAoC,GAACC,SAAS,KAAG;AAC1DC,EAAAA,IAAI,EAACH,mBAAmB,CAACI,yCADiC;AAE1DC,EAAAA,OAAO,EAACH;AAFkD,CAAH,CAApD;AAKP,OAAO,MAAMI,6BAA6B,GAACC,GAAG,KAAG;AAC7CJ,EAAAA,IAAI,EAACH,mBAAmB,CAACQ,gCADoB;AAE7CH,EAAAA,OAAO,EAACE,GAAG,GAAC;AAFiC,CAAH,CAAvC;AAKP,OAAO,MAAME,2BAA2B,GAACF,GAAG,KAAG;AAC3CJ,EAAAA,IAAI,EAACH,mBAAmB,CAACU,8BADkB;AAE3CL,EAAAA,OAAO,EAACE;AAFmC,CAAH,CAArC;AAKP,OAAO,MAAMI,8BAA8B,GAACJ,GAAG,KAAG;AAC9CJ,EAAAA,IAAI,EAACH,mBAAmB,CAACY,iCADqB;AAE9CP,EAAAA,OAAO,EAACE,GAAG,GAAC;AAFkC,CAAH,CAAxC;AAKP,OAAO,MAAMM,kCAAkC,GAACN,GAAG,KAAG;AAClDJ,EAAAA,IAAI,EAACH,mBAAmB,CAACc,qCADyB;AAElDT,EAAAA,OAAO,EAACE,GAAG,GAAC;AAFsC,CAAH,CAA5C,C,CAKP;AACA;AACA;AACA","sourcesContent":["import {QuestionActionTypes} from './question.types';\n\nexport const setFetchedQuestionsToStateCircuitron=questions=>({\n    type:QuestionActionTypes.SET_FETCHED_QUESTIONS_TO_STATE_CIRCUITRON,\n    payload:questions\n})\n\nexport const setSelectedQuestionCircuitron=num=>({\n    type:QuestionActionTypes.SET_SELECTED_QUESTION_CIRCUITRON,\n    payload:num-1\n})\n\nexport const setSelectedAnswerCircuitron=num=>({\n    type:QuestionActionTypes.SET_SELECTED_ANSWER_CIRCUITRON,\n    payload:num\n})\n\nexport const selectedQuestionNextCircuitron=num=>({\n    type:QuestionActionTypes.SELECTED_QUESTION_NEXT_CIRCUITRON,\n    payload:num+1\n})\n\nexport const selectedQuestionPreviousCircuitron=num=>({\n    type:QuestionActionTypes.SELECTED_QUESTION_PREVIOUS_CIRCUITRON,\n    payload:num-1\n})\n\n// export const setRecentFetchedTime=time=>({\n//     type:QuestionActionTypes.SET_RECENT_FETCHED_TIME,\n//     payload:time\n// })"]},"metadata":{},"sourceType":"module"}