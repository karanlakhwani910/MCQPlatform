{"ast":null,"code":"// import { QuestionAnswerSharp } from '@material-ui/icons';\nimport { QuestionActionTypes } from './question.types';\nconst INITIAL_STATE = {\n  questions: [],\n  selectedQuestionNumber: 0,\n  selectedQuestion: {\n    content: '',\n    answers: [{\n      id: 0,\n      text: \"\"\n    }, {\n      id: 1,\n      text: \"\"\n    }, {\n      id: 2,\n      text: \"\"\n    }, {\n      id: 3,\n      text: \"\"\n    }],\n    selectedAnswer: ''\n  },\n  recentFetchedTime: 3600\n};\n\nconst questionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case QuestionActionTypes.SET_FETCHED_QUESTIONS_TO_STATE:\n      return { ...state,\n        questions: action.payload\n      };\n\n    case QuestionActionTypes.SET_SELECTED_QUESTION:\n      return { ...state,\n        selectedQuestion: state.questions[action.payload],\n        selectedQuestionNumber: action.payload\n      };\n\n    case QuestionActionTypes.SELECTED_QUESTION_NEXT:\n      return { ...state,\n        selectedQuestion: state.questions[action.payload],\n        selectedQuestionNumber: action.payload\n      };\n\n    case QuestionActionTypes.SELECTED_QUESTION_PREVIOUS:\n      return { ...state,\n        selectedQuestion: state.questions[action.payload],\n        selectedQuestionNumber: action.payload\n      };\n\n    case QuestionActionTypes.SET_SELECTED_ANSWER:\n      var Questions = state.questions;\n      var question = Questions[state.selectedQuestionNumber];\n      question.selectedAnswer = action.payload;\n      question.marked = true;\n      Questions[state.selectedQuestionNumber] = question;\n      return { ...state,\n        questions: Questions,\n        selectedQuestion: { ...state.selectedQuestion,\n          selectedAnswer: action.payload,\n          marked: true\n        }\n      };\n    // case QuestionActionTypes.SET_RECENT_FETCHED_TIME:\n    //     return{\n    //         ...state,\n    //         recentFetchedTime:action.payload\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport default questionReducer;","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/client/src/redux/circuitron-question/question.reducer.js"],"names":["QuestionActionTypes","INITIAL_STATE","questions","selectedQuestionNumber","selectedQuestion","content","answers","id","text","selectedAnswer","recentFetchedTime","questionReducer","state","action","type","SET_FETCHED_QUESTIONS_TO_STATE","payload","SET_SELECTED_QUESTION","SELECTED_QUESTION_NEXT","SELECTED_QUESTION_PREVIOUS","SET_SELECTED_ANSWER","Questions","question","marked"],"mappings":"AAAA;AACA,SAAQA,mBAAR,QAAkC,kBAAlC;AAEA,MAAMC,aAAa,GAAC;AACfC,EAAAA,SAAS,EAAC,EADK;AAEfC,EAAAA,sBAAsB,EAAC,CAFR;AAGfC,EAAAA,gBAAgB,EAAC;AACbC,IAAAA,OAAO,EAAC,EADK;AAEbC,IAAAA,OAAO,EAAC,CACL;AACIC,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAC;AAFT,KADK,EAKL;AACID,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAC;AAFT,KALK,EASL;AACID,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAC;AAFT,KATK,EAaL;AACID,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAC;AAFT,KAbK,CAFK;AAoBbC,IAAAA,cAAc,EAAC;AApBF,GAHF;AAyBfC,EAAAA,iBAAiB,EAAC;AAzBH,CAApB;;AA4BC,MAAMC,eAAe,GAAC,CAACC,KAAK,GAACX,aAAP,EAAqBY,MAArB,KAA8B;AAChD,UAAOA,MAAM,CAACC,IAAd;AACG,SAAKd,mBAAmB,CAACe,8BAAzB;AACI,aAAM,EACF,GAAGH,KADD;AAEFV,QAAAA,SAAS,EAACW,MAAM,CAACG;AAFf,OAAN;;AAIJ,SAAKhB,mBAAmB,CAACiB,qBAAzB;AACI,aAAM,EACF,GAAGL,KADD;AAEFR,QAAAA,gBAAgB,EAACQ,KAAK,CAACV,SAAN,CAAgBW,MAAM,CAACG,OAAvB,CAFf;AAGFb,QAAAA,sBAAsB,EAACU,MAAM,CAACG;AAH5B,OAAN;;AAKJ,SAAKhB,mBAAmB,CAACkB,sBAAzB;AACI,aAAM,EACF,GAAGN,KADD;AAEFR,QAAAA,gBAAgB,EAACQ,KAAK,CAACV,SAAN,CAAgBW,MAAM,CAACG,OAAvB,CAFf;AAGFb,QAAAA,sBAAsB,EAACU,MAAM,CAACG;AAH5B,OAAN;;AAMJ,SAAKhB,mBAAmB,CAACmB,0BAAzB;AACI,aAAM,EACF,GAAGP,KADD;AAEFR,QAAAA,gBAAgB,EAACQ,KAAK,CAACV,SAAN,CAAgBW,MAAM,CAACG,OAAvB,CAFf;AAGFb,QAAAA,sBAAsB,EAACU,MAAM,CAACG;AAH5B,OAAN;;AAKJ,SAAKhB,mBAAmB,CAACoB,mBAAzB;AACI,UAAIC,SAAS,GAACT,KAAK,CAACV,SAApB;AACA,UAAIoB,QAAQ,GAACD,SAAS,CAACT,KAAK,CAACT,sBAAP,CAAtB;AACAmB,MAAAA,QAAQ,CAACb,cAAT,GAAwBI,MAAM,CAACG,OAA/B;AACAM,MAAAA,QAAQ,CAACC,MAAT,GAAgB,IAAhB;AACAF,MAAAA,SAAS,CAACT,KAAK,CAACT,sBAAP,CAAT,GAAwCmB,QAAxC;AACA,aAAM,EACF,GAAGV,KADD;AAEFV,QAAAA,SAAS,EAACmB,SAFR;AAGFjB,QAAAA,gBAAgB,EAAC,EAAC,GAAGQ,KAAK,CAACR,gBAAV;AAA2BK,UAAAA,cAAc,EAACI,MAAM,CAACG,OAAjD;AAAyDO,UAAAA,MAAM,EAAC;AAAhE;AAHf,OAAN;AAMJ;AACA;AACA;AACA;AACA;;AACA;AACI,aAAOX,KAAP;AA3CP;AA+CH,CAhDD;;AAkDA,eAAeD,eAAf","sourcesContent":["// import { QuestionAnswerSharp } from '@material-ui/icons';\nimport {QuestionActionTypes} from './question.types';\n\nconst INITIAL_STATE={\n     questions:[],\n     selectedQuestionNumber:0,\n     selectedQuestion:{\n         content:'',\n         answers:[\n            {\n                id:0,\n                text:\"\"\n            },\n            {\n                id:1,\n                text:\"\"\n            },\n            {\n                id:2,\n                text:\"\"\n            },\n            {\n                id:3,\n                text:\"\"\n            },\n         ],\n         selectedAnswer:''\n     },\n     recentFetchedTime:3600\n }\n \n const questionReducer=(state=INITIAL_STATE,action)=>{\n     switch(action.type){\n        case QuestionActionTypes.SET_FETCHED_QUESTIONS_TO_STATE:\n            return{\n                ...state,\n                questions:action.payload\n            }\n        case QuestionActionTypes.SET_SELECTED_QUESTION:\n            return{\n                ...state,\n                selectedQuestion:state.questions[action.payload],\n                selectedQuestionNumber:action.payload\n            }\n        case QuestionActionTypes.SELECTED_QUESTION_NEXT:\n            return{\n                ...state,\n                selectedQuestion:state.questions[action.payload],\n                selectedQuestionNumber:action.payload\n    \n            }\n        case QuestionActionTypes.SELECTED_QUESTION_PREVIOUS:\n            return{\n                ...state,\n                selectedQuestion:state.questions[action.payload],\n                selectedQuestionNumber:action.payload\n            }\n        case QuestionActionTypes.SET_SELECTED_ANSWER:\n            var Questions=state.questions;\n            var question=Questions[state.selectedQuestionNumber];\n            question.selectedAnswer=action.payload;\n            question.marked=true;\n            Questions[state.selectedQuestionNumber]=question;\n            return{\n                ...state,\n                questions:Questions,\n                selectedQuestion:{...state.selectedQuestion,selectedAnswer:action.payload,marked:true},\n                \n            }\n        // case QuestionActionTypes.SET_RECENT_FETCHED_TIME:\n        //     return{\n        //         ...state,\n        //         recentFetchedTime:action.payload\n        //     }\n        default:\n            return state;\n        \n     }\n\n }\n \n export default questionReducer;"]},"metadata":{},"sourceType":"module"}