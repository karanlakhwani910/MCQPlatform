{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/pages/quiz-page/quiz-page.component.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setFetchedQuestionsToState, selectedQuestionNext, selectedQuestionPrevious } from '../../redux/question/question.actions';\nimport { getSelectedQuestion, getSelectedQuestionNumber } from '../../redux/question/question.selector';\nimport \"./quiz-page.styles.scss\";\nimport GridComponent from \"../../components/grid/grid.component\";\nimport McqComponent from \"../../components/mcq/mcq.component\";\nimport TimerComponent from \"../../components/timer/timer.component\";\nimport Button from \"../../components/button/button.component\";\nimport //Typography,\n//AppBar,\n// Card,\n// CardActions,\n// CardContent,\n// CardMedia,\n//CssBaseline,\n// Grid,\n//Toolbar,\n// Container,\n//ButtonGroup,\n\"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    axios.post(\"http://localhost:3001/fetchQuestions\").then(res => {\n      console.log(res);\n      this.setState(res.data);\n      this.props.setFetchedQuestionsToState(res.data);\n      console.log(\"action initialised\");\n    }).catch(function (error) {\n      console.log(\"an error has occurred : \", error);\n    });\n  }\n\n  render() {\n    const clickFunction = () => {\n      selectedQuestionNext(this.props.selectedQuestionNumber);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-5 col-sm-12 div1\",\n            children: /*#__PURE__*/_jsxDEV(GridComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9 col-md-7 col-sm-1\",\n            children: [/*#__PURE__*/_jsxDEV(TimerComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(McqComponent, {\n              question: this.props.selectedQuestion.content,\n              answers: this.props.selectedQuestion.answers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-row\",\n                text: \"Previous\",\n                type: \"btn btn-primary\",\n                onClickFunction: selectedQuestionPrevious(this.props.selectedQuestionNumber),\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-row\",\n                text: \"Next\",\n                type: \"btn btn-primary\",\n                onClickFunction: clickFunction,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-row\",\n                text: \"Submit\",\n                type: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setFetchedQuestionsToState: questions => dispatch(setFetchedQuestionsToState(questions)),\n  selectedQuestionNext: num => dispatch(selectedQuestionNext(num)),\n  selectedQuestionPrevious: num => dispatch(selectedQuestionPrevious(num))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  selectedQuestion: getSelectedQuestion,\n  selecetedQuestionNumber: getSelectedQuestionNumber\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizPage);","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/pages/quiz-page/quiz-page.component.jsx"],"names":["React","Component","axios","connect","createStructuredSelector","setFetchedQuestionsToState","selectedQuestionNext","selectedQuestionPrevious","getSelectedQuestion","getSelectedQuestionNumber","GridComponent","McqComponent","TimerComponent","Button","QuizPage","constructor","props","state","componentDidMount","post","then","res","console","log","setState","data","catch","error","render","clickFunction","selectedQuestionNumber","selectedQuestion","content","answers","mapDispatchToProps","dispatch","questions","num","mapStateToProps","selecetedQuestionNumber"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {setFetchedQuestionsToState,selectedQuestionNext,selectedQuestionPrevious} from '../../redux/question/question.actions';\nimport { getSelectedQuestion,getSelectedQuestionNumber } from '../../redux/question/question.selector';\n\nimport \"./quiz-page.styles.scss\";\n\nimport GridComponent from \"../../components/grid/grid.component\";\nimport McqComponent from \"../../components/mcq/mcq.component\";\nimport TimerComponent from \"../../components/timer/timer.component\";\nimport Button from \"../../components/button/button.component\";\nimport {\n  //Typography,\n  //AppBar,\n  // Card,\n  // CardActions,\n  // CardContent,\n  // CardMedia,\n  //CssBaseline,\n  // Grid,\n  //Toolbar,\n  // Container,\n  //ButtonGroup,\n} from \"@material-ui/core\";\n\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount(){\n    axios\n    .post(\"http://localhost:3001/fetchQuestions\")\n    .then((res)=> {\n      console.log(res);\n      this.setState(res.data);\n      this.props.setFetchedQuestionsToState(res.data);\n      console.log(\"action initialised\");\n    })\n    .catch(function (error) {\n      console.log(\"an error has occurred : \", error);\n    });\n  }\n\n  render() {\n    const clickFunction=()=>{\n        selectedQuestionNext(this.props.selectedQuestionNumber)\n    }\n    return (\n      <div className=\"container-fluid \">\n      <div className=\"overlay\">\n        <div className=\"row\">\n          {/* Instructions */}\n          <div className=\"col-lg-3 col-md-5 col-sm-12 div1\">\n            <GridComponent />\n          </div>\n\n          {/* Signin */}\n\n          \n\n          <div className=\"col-lg-9 col-md-7 col-sm-1\">\n            <TimerComponent />\n            <McqComponent question={this.props.selectedQuestion.content} answers={this.props.selectedQuestion.answers}/>\n            <div className=\"row\">\n              <Button\n                className=\"button-row\"\n                text=\"Previous\"\n                type=\"btn btn-primary\"\n                onClickFunction={selectedQuestionPrevious(this.props.selectedQuestionNumber)}\n              >Previous</Button>\n              <Button\n                className=\"button-row\"\n                text=\"Next\"\n                type=\"btn btn-primary\"\n                onClickFunction={clickFunction}\n              >Next</Button>\n              <Button\n                className=\"button-row\"\n                text=\"Submit\"\n                type=\"btn btn-primary\"\n              >Submit</Button>\n              \n               \n\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFetchedQuestionsToState: (questions) =>\n    dispatch(setFetchedQuestionsToState(questions)),\n  selectedQuestionNext:(num)=>\n    dispatch(selectedQuestionNext(num)),\n  selectedQuestionPrevious:(num)=>\n    dispatch(selectedQuestionPrevious(num))\n  \n});\n\nconst mapStateToProps=createStructuredSelector({\n    selectedQuestion:getSelectedQuestion,\n    selecetedQuestionNumber:getSelectedQuestionNumber\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(QuizPage);\n"]},"metadata":{},"sourceType":"module"}