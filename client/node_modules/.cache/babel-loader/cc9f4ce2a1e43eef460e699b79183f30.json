{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/grid/grid.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { numbers } from \"../../utils/number\";\nimport { Button } from \"@material-ui/core\";\nimport { setSelectedQuestion } from \"../../redux/question/question.actions\";\nimport { getQuestions, getSelectedQuestionNumber } from \"../../redux/question/question.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = ({\n  setSelectedQuestion,\n  questions,\n  selectedQuestionNumber\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gridHeading\",\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-box\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"small-rectangle2\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"#1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"small-rectangle-red\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"#2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"small-rectangle-green\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"#3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), numbers.map(number => {\n            const {\n              id,\n              num\n            } = number;\n            console.log(\"selcted question number is\", selectedQuestionNumber === num - 1);\n            return /*#__PURE__*/_jsxDEV(StyledButton, {\n              className: \"small-rectangle\",\n              onClick: () => setSelectedQuestion(num),\n              marked: questions[num - 1].marked,\n              selected: selectedQuestionNumber === num - 1,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: num\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Grid;\nconst Wrapper = styled.section`\n  .gridHeading {\n    color: white;\n    font-size: 30px;\n    padding-top: 10px;\n    font-weight: bold;\n    // font-family: \"Monotype Corsiva\", \"Apple Chancery\", \"ITC Zapf Chancery\",\n      \"URW Chancery L\", cursive;\n      font-family: auto;\n  }\n  .grid {\n    display: flex;\n  }\n  .rectangle {\n    background: black repeat-x scroll center top transparent;\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    padding-left: 0%;\n    min-height: 100%;\n    width: 100%;\n    background-image: linear-gradient(\n      to bottom,\n      #1e1a33,\n      #191540,\n      #292a5d,\n      #5f5c8f,\n      #635f8f\n    );\n\n    clear: both;\n    overflow-x: hidden; /* Hide horizontal scrollbar */\n    overflow-y: scroll;\n    scrollbar-width: none;\n  }\n  .rectangle::-webkit-scrollbar {\n    display: none; /* Safari and Chrome */\n  }\n  .number-box {\n    position: absolute;\n    top: 1rem;\n    left: 0.6%;\n    justify-content: space-around;\n\n    font-weight: bold;\n  }\n  \n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n  .small-rectangle2 {\n    background-color: var(--explorebtn);\n    background-color: #f11794;\n    box-shadow: 1px 1px 2px black, 0 0 20px #f11794, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid #f11794;\n      color: #f11794;\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n  .small-rectangle-red {\n    background-color: var(--explorebtn);\n    background-color: #0255a3;\n    box-shadow: 1px 1px 2px black, 0 0 20px #0255a3, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid #0255a3;\n      color: #0255a3;\n      box-shadow: 1px 1px 2px black, 0 0 45px #0255a3, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n  .small-rectangle-green {\n    background-color: var(--explorebtn);\n    background-color: #00ff00;\n    box-shadow: 1px 1px 2px black, 0 0 20px #00ff00, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid #00ff00;\n      color: #00ff00;\n      box-shadow: 1px 1px 2px black, 0 0 45px #00ff00, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n`;\n_c2 = Wrapper;\nconst StyledButton = styled(Button)`\n  background-color: var(--explorebtn);\n  background-color: ${props => props.selected ? \"#00ff00\" : props.marked ? \"cyan\" : \"#0255a3\"};\n  box-shadow: 1px 1px 2px black, 0 0 20px cyan, 0 0 5px darkblue;\n  height: 62px;\n  width: 65px;\n  border: none;\n  border-radius: 15px;\n  text-align: center;\n  align-item: center;\n  margin-top: 11%;\n  margin-left: 4%;\n  &:hover {\n    background: black;\n    border: 4px solid ${props => props.selected ? \"#00ff00\" : props.marked ? \"cyan\" : \"#0255a3\"};\n    color: ${props => props.selected ? \"#00ff00\" : props.marked ? \"cyan\" : \"#0255a3\"};\n    box-shadow: 1px 1px 2px black, 0 0 45px ${props => props.selected ? \"#00ff00\" : props.marked ? \"cyan\" : \"#0255a3\"};, 0 0 5px darkblue;\n  `;\n_c3 = StyledButton;\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedQuestion: question => dispatch(setSelectedQuestion(question))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  questions: getQuestions,\n  selectedQuestionNumber: getSelectedQuestionNumber\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"StyledButton\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/grid/grid.component.jsx"],"names":["React","connect","styled","numbers","Button","setSelectedQuestion","getQuestions","getSelectedQuestionNumber","createStructuredSelector","Grid","questions","selectedQuestionNumber","map","number","id","num","console","log","marked","Wrapper","section","StyledButton","props","selected","mapDispatchToProps","dispatch","question","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SACEC,YADF,EAEEC,yBAFF,QAGO,wCAHP;AAKA,SAASC,wBAAT,QAAyC,UAAzC;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEJ,EAAAA,mBAAF;AAAsBK,EAAAA,SAAtB;AAAgCC,EAAAA;AAAhC,CAAD,KAA8D;AACzE,sBACE,QAAC,OAAD;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,kBAAlB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,uBAAlB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,EAUGR,OAAO,CAACS,GAAR,CAAaC,MAAD,IAAY;AACvB,kBAAM;AAAEC,cAAAA,EAAF;AAAMC,cAAAA;AAAN,gBAAcF,MAApB;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCN,sBAAsB,KAAII,GAAG,GAAC,CAAvE;AACA,gCACE,QAAC,YAAD;AACE,cAAA,SAAS,EAAC,iBADZ;AAGE,cAAA,OAAO,EAAE,MAAMV,mBAAmB,CAACU,GAAD,CAHpC;AAIE,cAAA,MAAM,EAAEL,SAAS,CAACK,GAAG,GAAC,CAAL,CAAT,CAAiBG,MAJ3B;AAKE,cAAA,QAAQ,EAAEP,sBAAsB,KAAII,GAAG,GAAC,CAL1C;AAAA,qCAOE;AAAA,0BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AAPF,eAEOD,EAFP;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD,WAdA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CApCD;;KAAML,I;AAsCN,MAAMU,OAAO,GAAGjB,MAAM,CAACkzHA;MAAMD,O;AA2HN,MAAME,YAAY,GAACnB,MAAM,CAACE,MAAD,CAAS;AAClC;AACA,sBAAsBkB,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA8BD,KAAK,CAACJ,MAAN,GAAa,MAAb,GAAoB,SAAY;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBI,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA8BD,KAAK,CAACJ,MAAN,GAAa,MAAb,GAAoB,SAAY;AAChG,aAAaI,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA8BD,KAAK,CAACJ,MAAN,GAAa,MAAb,GAAoB,SAAY;AACrF,8CAA8CI,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA8BD,KAAK,CAACJ,MAAN,GAAa,MAAb,GAAoB,SAAY;AACtH,GAjBA;MAAMG,Y;;AAmBN,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,mBAAmB,EAAGqB,QAAD,IAAcD,QAAQ,CAACpB,mBAAmB,CAACqB,QAAD,CAApB;AADH,CAAf,CAA3B;;AAIA,MAAMC,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CE,EAAAA,SAAS,EAACJ,YADqC;AAE/CK,EAAAA,sBAAsB,EAACJ;AAFwB,CAAD,CAAhD;AAMA,eAAeN,OAAO,CAAC0B,eAAD,EAAkBH,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport styled from \"styled-components\";\n\nimport { numbers } from \"../../utils/number\";\nimport { Button } from \"@material-ui/core\";\n\nimport { setSelectedQuestion } from \"../../redux/question/question.actions\";\nimport {\n  getQuestions,\n  getSelectedQuestionNumber\n} from \"../../redux/question/question.selector\";\n\nimport { createStructuredSelector } from \"reselect\";\n\nconst Grid = ({ setSelectedQuestion,questions,selectedQuestionNumber }) => {\n  return (\n    <Wrapper>\n      <section className=\"grid\">\n        <div className=\"rectangle\">\n          <div className=\"gridHeading\">Questions</div>\n          <div className=\"number-box\">\n            <Button className=\"small-rectangle2\">\n              <h4>#1</h4>\n            </Button>\n            <Button className=\"small-rectangle-red\">\n              <h4>#2</h4>\n            </Button>\n            <Button className=\"small-rectangle-green\">\n              <h4>#3</h4>\n            </Button>\n            {numbers.map((number) => {\n              const { id, num } = number;\n              console.log(\"selcted question number is\",selectedQuestionNumber===(num-1))\n              return (\n                <StyledButton\n                  className=\"small-rectangle\"\n                  key={id}\n                  onClick={() => setSelectedQuestion(num)}\n                  marked={questions[num-1].marked}\n                  selected={selectedQuestionNumber===(num-1)}\n                >\n                  <h4>{num}</h4>\n                </StyledButton>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.section`\n  .gridHeading {\n    color: white;\n    font-size: 30px;\n    padding-top: 10px;\n    font-weight: bold;\n    // font-family: \"Monotype Corsiva\", \"Apple Chancery\", \"ITC Zapf Chancery\",\n      \"URW Chancery L\", cursive;\n      font-family: auto;\n  }\n  .grid {\n    display: flex;\n  }\n  .rectangle {\n    background: black repeat-x scroll center top transparent;\n    position: absolute;\n    top: 0%;\n    left: 0%;\n    padding-left: 0%;\n    min-height: 100%;\n    width: 100%;\n    background-image: linear-gradient(\n      to bottom,\n      #1e1a33,\n      #191540,\n      #292a5d,\n      #5f5c8f,\n      #635f8f\n    );\n\n    clear: both;\n    overflow-x: hidden; /* Hide horizontal scrollbar */\n    overflow-y: scroll;\n    scrollbar-width: none;\n  }\n  .rectangle::-webkit-scrollbar {\n    display: none; /* Safari and Chrome */\n  }\n  .number-box {\n    position: absolute;\n    top: 1rem;\n    left: 0.6%;\n    justify-content: space-around;\n\n    font-weight: bold;\n  }\n  \n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n  .small-rectangle2 {\n    background-color: var(--explorebtn);\n    background-color: #f11794;\n    box-shadow: 1px 1px 2px black, 0 0 20px #f11794, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid #f11794;\n      color: #f11794;\n      box-shadow: 1px 1px 2px black, 0 0 45px #f11794, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n  .small-rectangle-red {\n    background-color: var(--explorebtn);\n    background-color: #0255a3;\n    box-shadow: 1px 1px 2px black, 0 0 20px #0255a3, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid #0255a3;\n      color: #0255a3;\n      box-shadow: 1px 1px 2px black, 0 0 45px #0255a3, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n  .small-rectangle-green {\n    background-color: var(--explorebtn);\n    background-color: #00ff00;\n    box-shadow: 1px 1px 2px black, 0 0 20px #00ff00, 0 0 5px darkblue;\n    height: 62px;\n    width: 65px;\n    border: none;\n    border-radius: 15px;\n    text-align: center;\n    align-item: center;\n    margin-top: 11%;\n    margin-left: 4%;\n    &:hover {\n      background: black;\n      border: 4px solid #00ff00;\n      color: #00ff00;\n      box-shadow: 1px 1px 2px black, 0 0 45px #00ff00, 0 0 5px darkblue;\n    }\n    h4 {\n      margin-top: 20%;\n      font-size: 2rem;\n    }\n  }\n`;\n\nconst StyledButton=styled(Button)`\n  background-color: var(--explorebtn);\n  background-color: ${props => (props.selected ? \"#00ff00\" : (props.marked?\"cyan\":\"#0255a3\"))};\n  box-shadow: 1px 1px 2px black, 0 0 20px cyan, 0 0 5px darkblue;\n  height: 62px;\n  width: 65px;\n  border: none;\n  border-radius: 15px;\n  text-align: center;\n  align-item: center;\n  margin-top: 11%;\n  margin-left: 4%;\n  &:hover {\n    background: black;\n    border: 4px solid ${props => (props.selected ? \"#00ff00\" : (props.marked?\"cyan\":\"#0255a3\"))};\n    color: ${props => (props.selected ? \"#00ff00\" : (props.marked?\"cyan\":\"#0255a3\"))};\n    box-shadow: 1px 1px 2px black, 0 0 45px ${props => (props.selected ? \"#00ff00\" : (props.marked?\"cyan\":\"#0255a3\"))};, 0 0 5px darkblue;\n  `\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedQuestion: (question) => dispatch(setSelectedQuestion(question)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  questions:getQuestions,\n  selectedQuestionNumber:getSelectedQuestionNumber\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n"]},"metadata":{},"sourceType":"module"}