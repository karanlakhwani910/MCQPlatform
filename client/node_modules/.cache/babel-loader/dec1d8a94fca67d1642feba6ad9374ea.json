{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst question = state => state.circuitronQuestion;\n\nexport const getQuestionsCircuitron = createSelector([question], question => question.questions);\nexport const getSelectedQuestionCircuitron = createSelector([question], question => question.selectedQuestion);\nexport const getSelectedQuestionAnswersCircuitron = createSelector([getSelectedQuestionCircuitron], getSelectedQuestion => getSelectedQuestion.answers);\nexport const getSelectedQuestionNumberCircuitron = createSelector([question], question => question.selectedQuestionNumber); // export const getRecentFetchedTime=createSelector(\n//     [question],\n//     question=>question.recentFetchedTime\n// );","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/client/src/redux/circuitron-question/question.selector.js"],"names":["createSelector","question","state","circuitronQuestion","getQuestionsCircuitron","questions","getSelectedQuestionCircuitron","selectedQuestion","getSelectedQuestionAnswersCircuitron","getSelectedQuestion","answers","getSelectedQuestionNumberCircuitron","selectedQuestionNumber"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,QAAQ,GAACC,KAAK,IAAEA,KAAK,CAACC,kBAA5B;;AAEA,OAAO,MAAMC,sBAAsB,GAACJ,cAAc,CAC9C,CAACC,QAAD,CAD8C,EAE9CA,QAAQ,IAAEA,QAAQ,CAACI,SAF2B,CAA3C;AAKP,OAAO,MAAMC,6BAA6B,GAACN,cAAc,CACrD,CAACC,QAAD,CADqD,EAErDA,QAAQ,IAAEA,QAAQ,CAACM,gBAFkC,CAAlD;AAKP,OAAO,MAAMC,oCAAoC,GAACR,cAAc,CAC5D,CAACM,6BAAD,CAD4D,EAE5DG,mBAAmB,IAAEA,mBAAmB,CAACC,OAFmB,CAAzD;AAKP,OAAO,MAAMC,mCAAmC,GAACX,cAAc,CAC3D,CAACC,QAAD,CAD2D,EAE3DA,QAAQ,IAAEA,QAAQ,CAACW,sBAFwC,CAAxD,C,CAKP;AACA;AACA;AACA","sourcesContent":["import {createSelector} from 'reselect';\n\nconst question=state=>state.circuitronQuestion;\n\nexport const getQuestionsCircuitron=createSelector(\n    [question],\n    question=>question.questions\n)\n\nexport const getSelectedQuestionCircuitron=createSelector(\n    [question],\n    question=>question.selectedQuestion\n);\n\nexport const getSelectedQuestionAnswersCircuitron=createSelector(\n    [getSelectedQuestionCircuitron],\n    getSelectedQuestion=>getSelectedQuestion.answers\n);\n\nexport const getSelectedQuestionNumberCircuitron=createSelector(\n    [question],\n    question=>question.selectedQuestionNumber\n);\n\n// export const getRecentFetchedTime=createSelector(\n//     [question],\n//     question=>question.recentFetchedTime\n// );"]},"metadata":{},"sourceType":"module"}