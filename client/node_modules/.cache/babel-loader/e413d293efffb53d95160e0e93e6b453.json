{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/timer/timer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./timer.styles.scss\"; // import { Typography } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const [time, setTime] = useState(60 * 60);\n  const [hour, setHour] = useState(\"00\");\n  const [min, setMin] = useState(\"00\");\n  const [sec, setSec] = useState(\"00\"); // let interval = useRef();\n\n  setInterval(() => {\n    setTime(time - 1);\n    console.log(time);\n    var h = Math.floor(time / (60 * 60));\n    var m = Math.floor(time % (60 * 60) / 60);\n    var s = time % 60;\n\n    if (time > 0) {\n      if (h < 10 || m < 10 || s < 10) {\n        h = \"0\" + h.toString();\n        m = \"0\" + m.toString();\n        s = \"0\" + s.toString();\n      }\n\n      setHour(h);\n      setMin(m);\n      setSec(s);\n    } else {// clearInterval(interval.current);\n    }\n  }, 1000); // useEffect(() => {\n  //   settimer();\n  //   return () => {\n  //     clearInterval(interval.current);\n  //   };\n  // });\n\n  const [counter, setCounter] = React.useState(60); // Third Attempts\n\n  React.useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-xs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-lg-none  col-sm-9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-sm-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"timer\",\n              children: counter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"Ez6TD6GqRqUHs2duub7jR/OMM3U=\");\n\n_c = Timer;\nconst Wrapper = styled.section`\n  .row {\n    display: inline-block;\n  }\n  .container-xs {\n    margin-top: -8%;\n  }\n  @media only screen and (min-width: 600px) {\n    .container-xs {\n      margin-top: -15%;\n      margin-right: -80%;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    .timer {\n      padding-top: -5%;\n    }\n  }\n`;\n_c2 = Wrapper;\nexport default Timer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/timer/timer.component.jsx"],"names":["React","useState","useEffect","useRef","styled","Timer","time","setTime","hour","setHour","min","setMin","sec","setSec","setInterval","console","log","h","Math","floor","m","s","toString","counter","setCounter","timer","clearInterval","Wrapper","section"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,qBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAK,EAAN,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B,CAJkB,CAMlB;;AAEEa,EAAAA,WAAW,CAAC,MAAM;AAChBP,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,QAAIW,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AACA,QAAIc,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAYb,IAAI,IAAI,KAAK,EAAT,CAAL,GAAqB,EAAhC,CAAR;AACA,QAAIe,CAAC,GAAGf,IAAI,GAAG,EAAf;;AAEA,QAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,UAAIW,CAAC,GAAG,EAAJ,IAAUG,CAAC,GAAG,EAAd,IAAoBC,CAAC,GAAG,EAA5B,EAAgC;AAC9BJ,QAAAA,CAAC,GAAG,MAAMA,CAAC,CAACK,QAAF,EAAV;AACAF,QAAAA,CAAC,GAAG,MAAMA,CAAC,CAACE,QAAF,EAAV;AACAD,QAAAA,CAAC,GAAG,MAAMA,CAAC,CAACC,QAAF,EAAV;AACD;;AACDb,MAAAA,OAAO,CAACQ,CAAD,CAAP;AACAN,MAAAA,MAAM,CAACS,CAAD,CAAN;AACAP,MAAAA,MAAM,CAACQ,CAAD,CAAN;AACD,KATD,MASO,CACL;AACD;AACF,GAnBU,EAmBR,IAnBQ,CAAX,CARgB,CA6BlB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBxB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B,CAnCkB,CAqClB;;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,UAAMuB,KAAK,GACTF,OAAO,GAAG,CAAV,IAAeT,WAAW,CAAC,MAAMU,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAD5B;AAEA,WAAO,MAAMG,aAAa,CAACD,KAAD,CAA1B;AACD,GAJD,EAIG,CAACF,OAAD,CAJH;AAMA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,wBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5DD;;GAAMlB,K;;KAAAA,K;AA6DN,MAAMsB,OAAO,GAAGvB,MAAM,CAACwB,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,O;AAmBN,eAAetB,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./timer.styles.scss\";\n// import { Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst Timer = () => {\n  const [time, setTime] = useState(60 * 60);\n  const [hour, setHour] = useState(\"00\");\n  const [min, setMin] = useState(\"00\");\n  const [sec, setSec] = useState(\"00\");\n\n  // let interval = useRef();\n\n    setInterval(() => {\n      setTime(time - 1);\n      console.log(time);\n      var h = Math.floor(time / (60 * 60));\n      var m = Math.floor((time % (60 * 60)) / 60);\n      var s = time % 60;\n\n      if (time > 0) {\n        if (h < 10 || m < 10 || s < 10) {\n          h = \"0\" + h.toString();\n          m = \"0\" + m.toString();\n          s = \"0\" + s.toString();\n        }\n        setHour(h);\n        setMin(m);\n        setSec(s);\n      } else {\n        // clearInterval(interval.current);\n      }\n    }, 1000);\n\n  // useEffect(() => {\n  //   settimer();\n  //   return () => {\n  //     clearInterval(interval.current);\n  //   };\n  // });\n  const [counter, setCounter] = React.useState(60);\n\n  // Third Attempts\n  React.useEffect(() => {\n    const timer =\n      counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  return (\n    <Wrapper>\n      <div>\n        <div className=\"container-xs\">\n          <div className=\"row\">\n            <div className=\"d-lg-none  col-sm-9\"></div>\n            <div className=\"col-lg-2 col-sm-5\">\n              <h1 className=\"timer\">\n                {counter}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.section`\n  .row {\n    display: inline-block;\n  }\n  .container-xs {\n    margin-top: -8%;\n  }\n  @media only screen and (min-width: 600px) {\n    .container-xs {\n      margin-top: -15%;\n      margin-right: -80%;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    .timer {\n      padding-top: -5%;\n    }\n  }\n`;\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}