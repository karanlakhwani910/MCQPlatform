{"ast":null,"code":"var _jsxFileName = \"/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport \"./answer.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from \"styled-components\";\nimport { getSelectedQuestionAnswers, getSelectedQuestion } from \"../../redux/question/question.selector\";\nimport { setSelectedAnswer } from \"../../redux/question/question.actions\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledRadio = styled(Radio)`\n  color: ${cyan[400]};\n  &.Mui-checked {\n    color: ${cyan[600]};\n  }\n`;\n_c = StyledRadio;\n\nconst RadioButtonsGroup = function ({\n  answers,\n  selectedQuestion,\n  setSelectedAnswer\n}) {\n  _s();\n\n  const selectedAnswer = selectedQuestion.selectedAnswer;\n  const [value, setValue] = React.useState(selectedAnswer);\n  React.useEffect(() => {\n    setValue(selectedAnswer);\n  }, [selectedAnswer]);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setSelectedAnswer(event.target.value);\n  }; //{answers[0].text}\n  //{answers[1].text}\n  //{answers[2].text}\n  //{answers[3].text}\n\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: \"styling vertical-center-row\",\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"options\",\n        name: \"gender1\",\n        value: value,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"0\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this),\n          label: answers[0].text,\n          className: \"FormControlLabelStyling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"1\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this),\n          label: answers[1].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"2\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this),\n          label: answers[2].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"3\",\n          control: /*#__PURE__*/_jsxDEV(StyledRadio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this),\n          label: answers[3].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RadioButtonsGroup, \"flGVnLahn5teyqtsbJi7iCLZzEU=\");\n\n_c2 = RadioButtonsGroup;\nconst mapStateToProps = createStructuredSelector({\n  answers: getSelectedQuestionAnswers,\n  selectedQuestion: getSelectedQuestion\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedAnswer: num => dispatch(setSelectedAnswer(num))\n});\n\nconst Wrapper = styled.section`\n  @media only screen and (min-width: 600px) {\n    .MuiFormControlLabel-label {\n      font-size: 20px;\n    }\n  }\n  .MuiRadio-root {\n    color: #ffffff80;\n  }\n`;\n_c3 = Wrapper;\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledRadio\");\n$RefreshReg$(_c2, \"RadioButtonsGroup\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["/home/kshitij/Documents/Xenia_mcq_platform/src/components/answer/answer.component.jsx"],"names":["React","Radio","RadioGroup","FormControlLabel","FormControl","Button","FormLabel","connect","createStructuredSelector","styled","getSelectedQuestionAnswers","getSelectedQuestion","setSelectedAnswer","cyan","StyledRadio","RadioButtonsGroup","answers","selectedQuestion","selectedAnswer","value","setValue","useState","useEffect","handleChange","event","target","text","mapStateToProps","mapDispatchToProps","dispatch","num","Wrapper","section"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport \"./answer.styles.scss\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from \"styled-components\";\nimport {\n  getSelectedQuestionAnswers,\n  getSelectedQuestion,\n} from \"../../redux/question/question.selector\";\nimport { setSelectedAnswer } from \"../../redux/question/question.actions\";\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst StyledRadio = styled(Radio)`\n  color: ${cyan[400]};\n  &.Mui-checked {\n    color: ${cyan[600]};\n  }\n`;\nconst RadioButtonsGroup = function ({\n  answers,\n  selectedQuestion,\n  setSelectedAnswer,\n}) {\n  const selectedAnswer = selectedQuestion.selectedAnswer;\n  const [value, setValue] = React.useState(selectedAnswer);\n\n  React.useEffect(()=>{\n    setValue(selectedAnswer)\n  },[selectedAnswer])\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setSelectedAnswer(event.target.value);\n  };\n  //{answers[0].text}\n  //{answers[1].text}\n  //{answers[2].text}\n  //{answers[3].text}\n  return (\n    <Wrapper>\n      <FormControl component=\"fieldset\" className=\"styling vertical-center-row\">\n        <RadioGroup\n          aria-label=\"options\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"0\"\n            control={<StyledRadio />}\n            label={answers[0].text}\n            className=\"FormControlLabelStyling\"\n          />\n          <FormControlLabel\n            value=\"1\"\n            control={<StyledRadio />}\n            label={answers[1].text}\n          />\n          <FormControlLabel\n            value=\"2\"\n            control={<StyledRadio />}\n            label={answers[2].text}\n          />\n          <FormControlLabel\n            value=\"3\"\n            control={<StyledRadio />}\n            label={answers[3].text}\n          />\n        </RadioGroup>\n      </FormControl>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  answers: getSelectedQuestionAnswers,\n  selectedQuestion: getSelectedQuestion,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedAnswer: (num) => dispatch(setSelectedAnswer(num)),\n});\nconst Wrapper = styled.section`\n  @media only screen and (min-width: 600px) {\n    .MuiFormControlLabel-label {\n      font-size: 20px;\n    }\n  }\n  .MuiRadio-root {\n    color: #ffffff80;\n  }\n`;\nexport default connect(mapStateToProps, mapDispatchToProps)(RadioButtonsGroup);\n"]},"metadata":{},"sourceType":"module"}